{"ast":null,"code":"import _defineProperty from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _ from 'lodash';\nimport { FETCH_POSTS, FETCH_POST, DELETE_POST, LIKE_POST, UPDATE, FETCH_POST_UPDATE, SEARCH } from '../actions/notes';\nvar search = null;\nexport default function () {\n  var _objectSpread3;\n\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_POST_UPDATE:\n      console.log(_objectSpread({}, state, _defineProperty({}, action.payload.data.pk, action.payload.data)));\n      return _objectSpread({}, state, (_objectSpread3 = {}, _defineProperty(_objectSpread3, action.payload.data.pk, action.payload.data), _defineProperty(_objectSpread3, \"initialValues\", action.payload.data), _objectSpread3));\n\n    case DELETE_POST:\n      return _.omit(state, action.payload);\n\n    case FETCH_POST:\n      if (!action.payload.data) {\n        return action.payload.data;\n      }\n\n      return _objectSpread({}, state, _defineProperty({}, action.payload.data.pk, action.payload.data));\n\n    case LIKE_POST:\n      console.log(_objectSpread({}, state));\n      return _objectSpread({}, state, state.results[action.payload.data.pk] = action.payload.data, _defineProperty({}, action.payload.data.pk, action.payload.data));\n\n    case FETCH_POSTS:\n      var over = action.payload;\n\n      if (!over) {\n        return action.payload;\n      }\n\n      over.results = _.mapKeys(over.results, 'pk');\n      console.log(_.merge(over, over));\n      return over;\n\n    case UPDATE:\n      console.log(action.payload.data);\n      var act = action.payload.data;\n      console.log(_objectSpread({}, state, {\n        act: act\n      }));\n      return _objectSpread({}, state, {\n        act: act\n      });\n\n    case SEARCH:\n      var code = action.payload;\n\n      if (!code) {\n        search = code;\n        return {\n          search: search\n        };\n      }\n\n      code.results = _.mapKeys(code.results, 'pk');\n      search = code;\n      return {\n        search: search\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/devcode/Desktop/django-projects/Djang-React/react/frontend/src/reducers/code.js"],"names":["_","FETCH_POSTS","FETCH_POST","DELETE_POST","LIKE_POST","UPDATE","FETCH_POST_UPDATE","SEARCH","search","state","action","type","console","log","payload","data","pk","omit","results","over","mapKeys","merge","act","code"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport { FETCH_POSTS, FETCH_POST, DELETE_POST, LIKE_POST, UPDATE, FETCH_POST_UPDATE,SEARCH } from '../actions/notes'\n\n\n\nlet search = null\nexport default function (state = {}, action) {\n  switch (action.type) {\n    case FETCH_POST_UPDATE:\n      console.log({ ...state, [action.payload.data.pk]: action.payload.data })\n      return { ...state, [action.payload.data.pk]: action.payload.data,initialValues:action.payload.data }\n    case DELETE_POST:\n      return _.omit(state, action.payload)\n    case FETCH_POST:\n      if (!action.payload.data) {\n        return action.payload.data\n      }\n      return { ...state, [action.payload.data.pk]: action.payload.data }\n\n    case LIKE_POST:\n    console.log({...state})\n      return { ...state,...state.results[action.payload.data.pk]=action.payload.data,[action.payload.data.pk]: action.payload.data }\n    case FETCH_POSTS:\n      const over = action.payload\n      if (!over) {\n        return action.payload\n      }\n      over.results = _.mapKeys(over.results, 'pk')\n      console.log(_.merge(over, over))\n      return over\n\n    case UPDATE:\n      console.log(action.payload.data)\n      let act = action.payload.data\n      console.log({ ...state, act })\n      return { ...state, act }\n\n    case SEARCH:\n      let code = action.payload\n      if (!code) {\n        search = code\n        return {search}\n      }\n      code.results = _.mapKeys(code.results, 'pk')\n      search = code\n      return {search}\n\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}