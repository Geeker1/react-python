{"ast":null,"code":"var _jsxFileName = \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/src/components/PostRender.js\";\nimport React from 'react';\nimport _ from 'lodash';\nimport logo from '../img/puss.jpg';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { update } from '../actions/notes';\n\nvar PostRender = function PostRender(_ref) {\n  var post = _ref.post,\n      likes = _ref.likes,\n      handleSubmit = _ref.handleSubmit;\n  var results = post.posts.results,\n      update = post.update,\n      history = post.history;\n  console.log(update);\n  console.log(handleSubmit);\n  var values = {\n    users: ['hello', 'hi']\n  };\n  console.log(results);\n\n  var onSubmit = function onSubmit(values) {\n    console.log(values);\n  };\n\n  var indi = function indi() {\n    return _.map(results, function (post) {\n      return React.createElement(\"div\", {\n        className: \"col-md-4 py-2 col-lg-4\",\n        key: post.pk,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ledum\",\n        onClick: function onClick() {\n          history.push(\"/posts/\".concat(post.pk));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"h-80 w-100\",\n        src: logo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      })), React.createElement(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"my-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, post.name, React.createElement(\"button\", {\n        className: \"btn btn-danger\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"hello\"), React.createElement(\"span\", {\n        className: \"badge badge-secondary float-right\",\n        onClick: function onClick() {\n          alert('Clicked');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Like\"))));\n    });\n  };\n\n  console.log(indi());\n  return React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, indi());\n};\n\nfunction validate(values) {\n  // inorder to validate input return a object we create from validate\n  // function....\n  var errors = {}; // if (!values.agree || values.agree == false) {\n  //  errors.agree = 'Hello'\n  // }\n  // if errors is empty the form is ready to submit,\n  // else there is a problem and redux form displays errors object\n\n  return errors;\n} // is localStorage in react\n\n\nexport default reduxForm({\n  validate: validate,\n  // converted to ES6 syntax (validate: validate)\n  form: 'PostUser'\n})(connect(null, {\n  update: update\n})(PostRender));","map":{"version":3,"sources":["/home/devcode/Desktop/django-projects/Djang-React/react/frontend/src/components/PostRender.js"],"names":["React","_","logo","Field","reduxForm","connect","update","PostRender","post","likes","handleSubmit","results","posts","history","console","log","values","users","onSubmit","indi","map","pk","push","name","alert","validate","errors","form"],"mappings":"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","sourcesContent":["import React from 'react'\nimport _ from 'lodash'\nimport logo from '../img/puss.jpg'\nimport { Field, reduxForm } from 'redux-form'\nimport { connect } from 'react-redux'\nimport { update } from '../actions/notes'\n\nconst PostRender = ({ post, likes, handleSubmit }) => {\n  const { posts: { results }, update, history } = post\n  console.log(update)\n  console.log(handleSubmit)\n  const values = { users: ['hello', 'hi'] }\n  console.log(results)\n\n  const onSubmit = (values) => {\n    console.log(values)\n  }\n\n  const indi = () => {\n    return _.map(results, post => {\n      return (\n        <div className='col-md-4 py-2 col-lg-4' key={post.pk}>\n          <div className='ledum' onClick={() => { history.push(`/posts/${post.pk}`) }}>\n            <img className='h-80 w-100' src={logo} />\n          </div>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className='my-2'>\n              {post.name}\n              <button className='btn btn-danger' type='submit'>\n                hello\n              </button>\n              <span\n                className='badge badge-secondary float-right'\n                onClick={() => { alert('Clicked') }}>Like</span>\n            </div>\n          </form>\n        </div>\n      )\n    })\n  }\n  console.log(indi())\n  return (\n    <div className='row'>\n      {indi()}\n    </div>\n  )\n}\n\nfunction validate (values) {\n  // inorder to validate input return a object we create from validate\n  // function....\n  const errors = {}\n\n  // if (!values.agree || values.agree == false) {\n  //  errors.agree = 'Hello'\n  // }\n\n  // if errors is empty the form is ready to submit,\n  // else there is a problem and redux form displays errors object\n  return errors\n}\n\n// is localStorage in react\n\nexport default reduxForm({\n  validate, // converted to ES6 syntax (validate: validate)\n  form: 'PostUser'\n})(connect(null, { update })(PostRender))\n"]},"metadata":{},"sourceType":"module"}