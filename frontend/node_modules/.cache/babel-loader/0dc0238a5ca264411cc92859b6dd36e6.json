{"ast":null,"code":"import axios from 'axios';\nimport { showLoading, hideLoading } from 'react-redux-loading-bar';\nexport var FETCH_POSTS = 'fetch_posts';\nexport var CREATE_POST = 'create_posts';\nexport var FETCH_POST = 'fetchpost';\nexport var DELETE_POST = 'deletePost';\nexport var FETCH_POST_UPDATE = 'fetchpostupdate';\nexport var UPDATE = 'update';\nexport var LIKE_POST = 'likepost';\nexport var SEARCH = 'search';\nvar API_URL = 'http://localhost:8000'; // export function fetchposts (link) {\n//   let request = axios.get(`${API_URL}/api/posts`)\n//   if (link) {\n//     request = axios.get(`${link}`)\n//   } else {\n//     request = axios.get(`${API_URL}/api/posts`)\n//   }\n//   return {\n//     type: FETCH_POSTS,\n//     payload: request\n//   }\n// }\n\nexport function togg(pk, values, callback) {\n  return function (dispatch, getState) {\n    console.log(values);\n    var tokenize = getState().auth.token;\n    var request = axios.put(\"\".concat(API_URL, \"/router/posts/\").concat(pk, \"/like/\"), values, {\n      headers: {\n        Authorization: \"JWT \".concat(tokenize)\n      }\n    });\n    request.then(function (response) {\n      console.log(response);\n      dispatch({\n        type: UPDATE,\n        payload: response\n      }).then(dispatch(likepost(pk)));\n    }).then(function () {\n      return callback();\n    }).catch(function (_ref) {\n      var response = _ref.response;\n      console.log(response.data);\n    });\n  };\n}\nexport function fetchposts(link) {\n  var request = axios.get(\"\".concat(API_URL, \"/api/posts\"));\n\n  if (link) {\n    request = axios.get(\"\".concat(link));\n  } else {\n    request = axios.get(\"\".concat(API_URL, \"/api/posts\"));\n  }\n\n  return function (dispatch, getState) {\n    request.then(function (response) {\n      dispatch(showLoading());\n      dispatch({\n        type: FETCH_POSTS,\n        payload: response.data\n      });\n      dispatch(hideLoading());\n    });\n  };\n}\nexport function createpost(values, callback) {\n  console.log(values);\n  var request = axios.post(\"\".concat(API_URL, \"/api/posts\"), values, {\n    headers: {\n      'content-type': 'multipart/form-data'\n    }\n  });\n  return function (dispatch, getState) {\n    request.then(function (response) {\n      console.log(values);\n      dispatch({\n        type: CREATE_POST,\n        payload: response\n      });\n      callback();\n    }).catch(function (_ref2) {\n      var response = _ref2.response;\n      console.log(response.data);\n    });\n  };\n}\nexport var search = function search(link) {\n  var request = axios.get(\"\".concat(API_URL, \"/api/posts\"));\n\n  if (link) {\n    request = axios.get(\"\".concat(link));\n  } else {\n    request = axios.get(\"\".concat(API_URL, \"/api/posts\"));\n  }\n\n  return function (dispatch, getState) {\n    request.then(function (response) {\n      dispatch({\n        type: SEARCH,\n        payload: response.data\n      });\n    });\n  };\n};\nexport function likepost(pk) {\n  var request = axios.get(\"\".concat(API_URL, \"/api/posts/\").concat(pk));\n  return function (dispatch, getState) {\n    request.then(function (response) {\n      dispatch({\n        type: LIKE_POST,\n        payload: response\n      });\n    });\n  };\n}\nexport function fetchpost(pk) {\n  var request = axios.get(\"\".concat(API_URL, \"/api/posts/\").concat(pk));\n  return function (dispatch, getState) {\n    request.then(function (response) {\n      dispatch(showLoading());\n      dispatch({\n        type: FETCH_POST,\n        payload: response\n      });\n      dispatch(hideLoading());\n    });\n  };\n}\nexport function deletePost(pk, callback) {\n  var request = axios.delete(\"\".concat(API_URL, \"/api/posts/\").concat(pk));\n  return function (dispatch, getState) {\n    request.then(function (response) {\n      dispatch({\n        type: DELETE_POST,\n        payload: pk\n      });\n    }).then(function () {\n      return callback();\n    });\n  };\n}\nexport function fetchupdate(pk, callback) {\n  var request = axios.get(\"\".concat(API_URL, \"/api/posts/\").concat(pk));\n  return function (dispatch, getState) {\n    request.then(function (response) {\n      dispatch({\n        type: FETCH_POST_UPDATE,\n        payload: response\n      });\n    }).then(function () {\n      return callback();\n    });\n  };\n}\nvar cv;\nexport function update(pk, values, callback) {\n  console.log(values);\n  var request = axios.put(\"\".concat(API_URL, \"/api/posts/\").concat(pk), values);\n  return function (dispatch, getState) {\n    request.then(function (response) {\n      console.log(response);\n      dispatch({\n        type: UPDATE,\n        payload: response\n      });\n    }).then(function () {\n      return callback();\n    }).catch(function (_ref3) {\n      var response = _ref3.response;\n      cv = response.data;\n      console.log(response.data);\n      dispatch({\n        type: UPDATE,\n        payload: response\n      });\n    }).then(function () {\n      return callback(cv);\n    });\n  };\n} // pass a reducer case to actually remove the actual\n// post from the application state cause the fetch posts removes it\n// but it is good to update the local state as well","map":{"version":3,"sources":["/home/devcode/Desktop/django-projects/Djang-React/react/frontend/src/actions/notes.js"],"names":["axios","showLoading","hideLoading","FETCH_POSTS","CREATE_POST","FETCH_POST","DELETE_POST","FETCH_POST_UPDATE","UPDATE","LIKE_POST","SEARCH","API_URL","togg","pk","values","callback","dispatch","getState","console","log","tokenize","auth","token","request","put","headers","Authorization","then","response","type","payload","likepost","catch","data","fetchposts","link","get","createpost","post","search","fetchpost","deletePost","delete","fetchupdate","cv","update"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { showLoading, hideLoading } from 'react-redux-loading-bar'\n\n\n\nexport const FETCH_POSTS = 'fetch_posts'\nexport const CREATE_POST = 'create_posts'\nexport const FETCH_POST = 'fetchpost'\nexport const DELETE_POST = 'deletePost'\nexport const FETCH_POST_UPDATE = 'fetchpostupdate'\nexport const UPDATE = 'update'\nexport const LIKE_POST = 'likepost'\nexport const SEARCH = 'search'\n\n\n\n\nconst API_URL = 'http://localhost:8000'\n\n// export function fetchposts (link) {\n//   let request = axios.get(`${API_URL}/api/posts`)\n//   if (link) {\n//     request = axios.get(`${link}`)\n//   } else {\n//     request = axios.get(`${API_URL}/api/posts`)\n//   }\n//   return {\n//     type: FETCH_POSTS,\n//     payload: request\n//   }\n// }\n\nexport function togg (pk, values, callback) {\n  return (dispatch, getState) => {\n    console.log(values)\n    const tokenize = getState().auth.token\n    const request = axios.put(`${API_URL}/router/posts/${pk}/like/`, values,\n      { headers: {\n        Authorization: `JWT ${tokenize}`\n      } })\n    request.then((response) => {\n      console.log(response)\n      dispatch({ type: UPDATE, payload: response })\n        .then(dispatch(likepost(pk)))\n    }).then(() => callback())\n      .catch(({ response }) => {\n        console.log(response.data)\n      })\n  }\n}\n\nexport function fetchposts (link) {\n  let request = axios.get(`${API_URL}/api/posts`)\n  if (link) {\n    request = axios.get(`${link}`)\n  } else {\n    request = axios.get(`${API_URL}/api/posts`)\n  }\n  return (dispatch, getState) => {\n    request.then((response) => {\n      dispatch(showLoading())\n      dispatch({ type: FETCH_POSTS, payload: response.data })\n      dispatch(hideLoading())\n    })\n  }\n}\n\nexport function createpost (values, callback) {\n  console.log(values)\n  const request = axios.post(`${API_URL}/api/posts`, values, {\n    headers: { 'content-type': 'multipart/form-data' }\n  })\n  return (dispatch, getState) => {\n    request.then((response) => {\n      console.log(values)\n      dispatch({ type: CREATE_POST, payload: response })\n      callback()\n    }).catch(({ response }) => {\n      console.log(response.data)\n    })\n  }\n}\n\n\nexport const search = (link)=>{\n  let request = axios.get(`${API_URL}/api/posts`)\n  if (link) {\n    request = axios.get(`${link}`)\n  } else {\n    request = axios.get(`${API_URL}/api/posts`)\n  }\n  return (dispatch, getState) => {\n    request.then((response) => {\n      dispatch({ type: SEARCH, payload: response.data })\n    })\n  }\n}\n\nexport function likepost (pk) {\n  const request = axios.get(`${API_URL}/api/posts/${pk}`)\n  return (dispatch, getState) => {\n    request.then((response) => {\n      dispatch({ type: LIKE_POST, payload: response })\n    })\n  }\n}\n\nexport function fetchpost (pk) {\n  const request = axios.get(`${API_URL}/api/posts/${pk}`)\n  return (dispatch, getState) => {\n    request.then((response) => {\n      dispatch(showLoading())\n      dispatch({ type: FETCH_POST, payload: response })\n      dispatch(hideLoading())\n    })\n  }\n}\n\nexport function deletePost (pk, callback) {\n  const request = axios.delete(`${API_URL}/api/posts/${pk}`)\n  return (dispatch, getState) => {\n    request.then((response) => {\n      dispatch({ type: DELETE_POST, payload: pk })\n    }).then(() => callback())\n  }\n}\n\nexport function fetchupdate (pk, callback) {\n  const request = axios.get(`${API_URL}/api/posts/${pk}`)\n  return (dispatch, getState) => {\n    request.then((response) => {\n      dispatch({ type: FETCH_POST_UPDATE, payload: response })\n    }).then(() => callback())\n  }\n}\n\nlet cv\n\nexport function update (pk, values, callback) {\n  console.log(values)\n  const request = axios.put(`${API_URL}/api/posts/${pk}`, values)\n  return (dispatch, getState) => {\n    request.then((response) => {\n      console.log(response)\n      dispatch({ type: UPDATE, payload: response })\n    }).then(() => callback())\n      .catch(({ response }) => {\n        cv = response.data\n        console.log(response.data)\n        dispatch({ type: UPDATE, payload: response })\n      }).then(()=>callback(cv))\n  }\n}\n\n// pass a reducer case to actually remove the actual\n// post from the application state cause the fetch posts removes it\n// but it is good to update the local state as well\n"]},"metadata":{},"sourceType":"module"}