{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/src/components/PostRender.js\";\n\nimport React from 'react';\nimport _ from 'lodash';\nimport logo from '../img/puss.jpg';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { togg, fetchpost } from '../actions/notes';\n\nvar PostRender = function PostRender(_ref) {\n  var post = _ref.post,\n      likes = _ref.likes;\n  var results = post.posts.results,\n      fetchpost = post.fetchpost,\n      history = post.history,\n      handleSubmit = post.handleSubmit;\n  console.log(post);\n  console.log(handleSubmit);\n  var values = {\n    users: ['hello', 'hi']\n  };\n  console.log(results);\n\n  var indi = function indi() {\n    return _.map(results, function (post) {\n      return React.createElement(\"div\", {\n        className: \"col-md-4 py-2 col-lg-4\",\n        key: post.pk,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ledum\",\n        onClick: function onClick() {\n          history.push(\"/posts/\".concat(post.pk));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"h-80 w-100\",\n        src: logo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      })), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"my-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, post.name, React.createElement(\"button\", {\n        className: \"btn btn-danger text-right\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"badge badge-secondary float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Like\")))), check == 'rick' ? React.createElement(\"button\", {\n        className: \"btn btn-warning\",\n        onClick: function onClick() {\n          _this.props.togg(post.pk);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"UnLike\") : React.createElement(\"button\", {\n        className: \"btn btn-info\",\n        onClick: function onClick() {\n          _this.props.togg(post.pk);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Like\"));\n    });\n  };\n\n  console.log(indi());\n  return React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, indi());\n};\n\nfunction validate(values) {\n  // inorder to validate input return a object we create from validate\n  // function....\n  var errors = {}; // if (!values.agree || values.agree == false) {\n  //  errors.agree = 'Hello'\n  // }\n  // if errors is empty the form is ready to submit,\n  // else there is a problem and redux form displays errors object\n\n  return errors;\n}\n\nfunction mapStateToProps(_ref2, ownProps) {\n  var posts = _ref2.posts,\n      cart = _ref2.cart,\n      auth = _ref2.auth;\n  console.log(posts);\n  return {\n    posti: posts[ownProps.match.params.pk],\n    auth: auth,\n    cart: cart[1]\n  };\n} // is localStorage in react\n\n\nexport default connect(mapStateToProps, {\n  fetchpost: fetchpost,\n  togg: togg\n})(PostRender);","map":{"version":3,"sources":["/home/devcode/Desktop/django-projects/Djang-React/react/frontend/src/components/PostRender.js"],"names":["React","_","logo","Field","reduxForm","connect","togg","fetchpost","PostRender","post","likes","results","posts","history","handleSubmit","console","log","values","users","indi","map","pk","push","name","check","props","validate","errors","mapStateToProps","ownProps","cart","auth","posti","match","params"],"mappings":"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","sourcesContent":["import React from 'react'\nimport _ from 'lodash'\nimport logo from '../img/puss.jpg'\nimport { Field, reduxForm } from 'redux-form'\nimport { connect } from 'react-redux'\nimport { togg, fetchpost } from '../actions/notes'\n\nconst PostRender = ({ post, likes }) => {\n  const { posts: { results }, fetchpost, history, handleSubmit } = post\n  console.log(post)\n\n  console.log(handleSubmit)\n  const values = { users: ['hello', 'hi'] }\n  console.log(results)\n\n  const indi = () => {\n    return _.map(results, post => {\n      return (\n        <div className='col-md-4 py-2 col-lg-4' key={post.pk}>\n          <div className='ledum' onClick={() => { history.push(`/posts/${post.pk}`) }}>\n            <img className='h-80 w-100' src={logo} />\n          </div>\n          <form>\n\n            <div className='my-2'>\n              {post.name}\n              <button className='btn btn-danger text-right' type='submit'>\n                <span\n                  className='badge badge-secondary float-right'\n                >Like</span>\n              </button>\n\n            </div>\n          </form>\n          {check == 'rick' ? <button className='btn btn-warning'\n            onClick={() => { this.props.togg(post.pk) }}>\n            UnLike\n          </button>\n            : <button className='btn btn-info'\n              onClick={() => { this.props.togg(post.pk) }}\n            >Like</button>}\n        </div>\n      )\n    })\n  }\n  console.log(indi())\n  return (\n    <div className='row'>\n      {indi()}\n    </div>\n  )\n}\n\nfunction validate (values) {\n  // inorder to validate input return a object we create from validate\n  // function....\n  const errors = {}\n\n  // if (!values.agree || values.agree == false) {\n  //  errors.agree = 'Hello'\n  // }\n\n  // if errors is empty the form is ready to submit,\n  // else there is a problem and redux form displays errors object\n  return errors\n}\n\nfunction mapStateToProps ({ posts, cart, auth }, ownProps) {\n  console.log(posts)\n  return { posti: posts[ownProps.match.params.pk], auth, cart: cart[1] }\n}\n\n// is localStorage in react\n\nexport default connect(mapStateToProps, { fetchpost, togg })(PostRender)\n"]},"metadata":{},"sourceType":"module"}