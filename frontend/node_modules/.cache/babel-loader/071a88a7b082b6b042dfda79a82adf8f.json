{"ast":null,"code":"var _jsxFileName = \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/src/components/PostRender.js\";\nimport React from 'react';\nimport _ from 'lodash';\nimport logo from '../img/puss.jpg';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { togg, fetchpost } from '../actions/notes';\n\nvar PostRender = function PostRender(_ref) {\n  var post = _ref.post,\n      posts = _ref.posts,\n      togg = _ref.togg,\n      likes = _ref.likes;\n  var results = post.posts.results,\n      history = post.history,\n      handleSubmit = post.handleSubmit;\n  console.log(post);\n  console.log(posts);\n  console.log(handleSubmit);\n  var values = {\n    users: ['hello', 'hi']\n  };\n  console.log(results);\n\n  var indi = function indi() {\n    return _.map(results, function (post) {\n      var check = _.map(post.users_like, function (hey) {\n        return hey.username;\n      });\n\n      console.log(check);\n      return React.createElement(\"div\", {\n        className: \"col-md-4 py-2 col-lg-4\",\n        key: post.pk,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ledum\",\n        onClick: function onClick() {\n          history.push(\"/posts/\".concat(post.pk));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"h-80 w-100\",\n        src: logo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"my-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"align-middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, post.name, React.createElement(\"span\", {\n        className: \"float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, check == 'rick' ? React.createElement(\"button\", {\n        className: \"btn btn-warning\",\n        onClick: function onClick() {\n          togg(post.pk);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"UnLike\") : React.createElement(\"button\", {\n        className: \"btn btn-info\",\n        onClick: function onClick() {\n          togg(post.pk);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Like\")))));\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, indi());\n};\n\nfunction validate(values) {\n  // inorder to validate input return a object we create from validate\n  // function....\n  var errors = {}; // if (!values.agree || values.agree == false) {\n  //  errors.agree = 'Hello'\n  // }\n  // if errors is empty the form is ready to submit,\n  // else there is a problem and redux form displays errors object\n\n  return errors;\n}\n\nfunction mapStateToProps(_ref2) {\n  var posts = _ref2.posts,\n      cart = _ref2.cart,\n      auth = _ref2.auth;\n  console.log(posts);\n  return {\n    posts: posts,\n    auth: auth,\n    cart: cart[1]\n  };\n} // is localStorage in react\n\n\nexport default connect(mapStateToProps, {\n  fetchpost: fetchpost,\n  togg: togg\n})(PostRender);","map":{"version":3,"sources":["/home/devcode/Desktop/django-projects/Djang-React/react/frontend/src/components/PostRender.js"],"names":["React","_","logo","Field","reduxForm","connect","togg","fetchpost","PostRender","post","posts","likes","results","history","handleSubmit","console","log","values","users","indi","map","check","users_like","hey","username","pk","push","name","validate","errors","mapStateToProps","cart","auth"],"mappings":"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","sourcesContent":["import React from 'react'\nimport _ from 'lodash'\nimport logo from '../img/puss.jpg'\nimport { Field, reduxForm } from 'redux-form'\nimport { connect } from 'react-redux'\nimport { togg, fetchpost } from '../actions/notes'\n\nconst PostRender = ({ post, posts, togg, likes }) => {\n  const { posts: { results }, history, handleSubmit } = post\n  console.log(post)\n  console.log(posts)\n\n  console.log(handleSubmit)\n  const values = { users: ['hello', 'hi'] }\n  console.log(results)\n\n  const indi = () => {\n    return _.map(results, post => {\n      const check = _.map(post.users_like, (hey) => {\n        return hey.username\n      })\n      console.log(check)\n      return (\n        <div className='col-md-4 py-2 col-lg-4' key={post.pk}>\n          <div className='ledum' onClick={() => { history.push(`/posts/${post.pk}`) }}>\n            <img className='h-80 w-100' src={logo} />\n          </div>\n          <div className='my-2'>\n            <h6 className='align-middle'>{post.name}\n              <span className='float-right'>\n                {check == 'rick' ? <button className='btn btn-warning'\n                  onClick={() => { togg(post.pk) }}>\n            UnLike\n                </button>\n                  : <button className='btn btn-info'\n                    onClick={() => { togg(post.pk) }}\n                  >Like</button>}\n              </span></h6>\n\n          </div>\n\n        </div>\n      )\n    })\n  }\n  return (\n    <div className='row'>\n      {indi()}\n    </div>\n  )\n}\n\nfunction validate (values) {\n  // inorder to validate input return a object we create from validate\n  // function....\n  const errors = {}\n\n  // if (!values.agree || values.agree == false) {\n  //  errors.agree = 'Hello'\n  // }\n\n  // if errors is empty the form is ready to submit,\n  // else there is a problem and redux form displays errors object\n  return errors\n}\n\nfunction mapStateToProps ({ posts, cart, auth }) {\n  console.log(posts)\n  return { posts, auth, cart: cart[1] }\n}\n\n// is localStorage in react\n\nexport default connect(mapStateToProps, { fetchpost, togg })(PostRender)\n"]},"metadata":{},"sourceType":"module"}