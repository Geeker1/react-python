{"ast":null,"code":"import _defineProperty from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _ from 'lodash';\nimport { FETCH_POSTS, FETCH_POST, DELETE_POST, LIKE_POST, UPDATE, FETCH_POST_UPDATE } from '../actions/notes';\nexport default function () {\n  var _objectSpread3;\n\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    cod: null\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_POST_UPDATE:\n      console.log(_objectSpread({}, state, _defineProperty({}, action.payload.data.pk, action.payload.data)));\n      return _objectSpread({}, state, (_objectSpread3 = {}, _defineProperty(_objectSpread3, action.payload.data.pk, action.payload.data), _defineProperty(_objectSpread3, \"initialValues\", action.payload.data), _objectSpread3));\n\n    case DELETE_POST:\n      return _.omit(state, action.payload);\n\n    case FETCH_POST:\n      if (!action.payload.data) {\n        return action.payload.data;\n      }\n\n      return _objectSpread({}, state, _defineProperty({}, action.payload.data.pk, action.payload.data));\n\n    case LIKE_POST:\n      console.log(_objectSpread({}, state));\n      return _objectSpread({}, state, state.results[action.payload.data.pk] = action.payload.data, _defineProperty({}, action.payload.data.pk, action.payload.data));\n\n    case FETCH_POSTS:\n      var over = action.payload;\n\n      if (!over) {\n        return action.payload;\n      }\n\n      over.results = _.mapKeys(over.results, 'pk');\n      console.log(_.merge(over, over));\n      return _objectSpread({\n        over: over\n      }, state, {\n        cod: false\n      });\n\n    case UPDATE:\n      console.log(action.payload.data);\n      var act = action.payload.data;\n      console.log(_objectSpread({}, state, {\n        act: act\n      }));\n      return _objectSpread({}, state, {\n        act: act\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/devcode/Desktop/django-projects/Djang-React/react/frontend/src/reducers/code.js"],"names":["_","FETCH_POSTS","FETCH_POST","DELETE_POST","LIKE_POST","UPDATE","FETCH_POST_UPDATE","state","cod","action","type","console","log","payload","data","pk","omit","results","over","mapKeys","merge","act"],"mappings":";;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,WAAlC,EAA+CC,SAA/C,EAA0DC,MAA1D,EAAkEC,iBAAlE,QAA2F,kBAA3F;AAEA,eAAe,YAAsC;AAAA;;AAAA,MAA5BC,KAA4B,uEAApB;AAACC,IAAAA,GAAG,EAAC;AAAL,GAAoB;AAAA,MAARC,MAAQ;;AACnD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,iBAAL;AACEK,MAAAA,OAAO,CAACC,GAAR,mBAAiBL,KAAjB,sBAAyBE,MAAM,CAACI,OAAP,CAAeC,IAAf,CAAoBC,EAA7C,EAAkDN,MAAM,CAACI,OAAP,CAAeC,IAAjE;AACA,+BAAYP,KAAZ,wDAAoBE,MAAM,CAACI,OAAP,CAAeC,IAAf,CAAoBC,EAAxC,EAA6CN,MAAM,CAACI,OAAP,CAAeC,IAA5D,oDAA+EL,MAAM,CAACI,OAAP,CAAeC,IAA9F;;AACF,SAAKX,WAAL;AACE,aAAOH,CAAC,CAACgB,IAAF,CAAOT,KAAP,EAAcE,MAAM,CAACI,OAArB,CAAP;;AACF,SAAKX,UAAL;AACE,UAAI,CAACO,MAAM,CAACI,OAAP,CAAeC,IAApB,EAA0B;AACxB,eAAOL,MAAM,CAACI,OAAP,CAAeC,IAAtB;AACD;;AACD,+BAAYP,KAAZ,sBAAoBE,MAAM,CAACI,OAAP,CAAeC,IAAf,CAAoBC,EAAxC,EAA6CN,MAAM,CAACI,OAAP,CAAeC,IAA5D;;AAEF,SAAKV,SAAL;AACAO,MAAAA,OAAO,CAACC,GAAR,mBAAgBL,KAAhB;AACE,+BAAYA,KAAZ,EAAqBA,KAAK,CAACU,OAAN,CAAcR,MAAM,CAACI,OAAP,CAAeC,IAAf,CAAoBC,EAAlC,IAAsCN,MAAM,CAACI,OAAP,CAAeC,IAA1E,sBAAgFL,MAAM,CAACI,OAAP,CAAeC,IAAf,CAAoBC,EAApG,EAAyGN,MAAM,CAACI,OAAP,CAAeC,IAAxH;;AACF,SAAKb,WAAL;AACE,UAAMiB,IAAI,GAAGT,MAAM,CAACI,OAApB;;AACA,UAAI,CAACK,IAAL,EAAW;AACT,eAAOT,MAAM,CAACI,OAAd;AACD;;AACDK,MAAAA,IAAI,CAACD,OAAL,GAAejB,CAAC,CAACmB,OAAF,CAAUD,IAAI,CAACD,OAAf,EAAwB,IAAxB,CAAf;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYZ,CAAC,CAACoB,KAAF,CAAQF,IAAR,EAAcA,IAAd,CAAZ;AACA;AAAQA,QAAAA,IAAI,EAAJA;AAAR,SAAgBX,KAAhB;AAAsBC,QAAAA,GAAG,EAAC;AAA1B;;AAEF,SAAKH,MAAL;AACEM,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAP,CAAeC,IAA3B;AACA,UAAIO,GAAG,GAAGZ,MAAM,CAACI,OAAP,CAAeC,IAAzB;AACAH,MAAAA,OAAO,CAACC,GAAR,mBAAiBL,KAAjB;AAAwBc,QAAAA,GAAG,EAAHA;AAAxB;AACA,+BAAYd,KAAZ;AAAmBc,QAAAA,GAAG,EAAHA;AAAnB;;AACF;AACE,aAAOd,KAAP;AA9BJ;AAgCD","sourcesContent":["import _ from 'lodash'\nimport { FETCH_POSTS, FETCH_POST, DELETE_POST, LIKE_POST, UPDATE, FETCH_POST_UPDATE } from '../actions/notes'\n\nexport default function (state = {cod:null}, action) {\n  switch (action.type) {\n    case FETCH_POST_UPDATE:\n      console.log({ ...state, [action.payload.data.pk]: action.payload.data })\n      return { ...state, [action.payload.data.pk]: action.payload.data,initialValues:action.payload.data }\n    case DELETE_POST:\n      return _.omit(state, action.payload)\n    case FETCH_POST:\n      if (!action.payload.data) {\n        return action.payload.data\n      }\n      return { ...state, [action.payload.data.pk]: action.payload.data }\n\n    case LIKE_POST:\n    console.log({...state})\n      return { ...state,...state.results[action.payload.data.pk]=action.payload.data,[action.payload.data.pk]: action.payload.data }\n    case FETCH_POSTS:\n      const over = action.payload\n      if (!over) {\n        return action.payload\n      }\n      over.results = _.mapKeys(over.results, 'pk')\n      console.log(_.merge(over, over))\n      return {over,...state,cod:false}\n\n    case UPDATE:\n      console.log(action.payload.data)\n      let act = action.payload.data\n      console.log({ ...state, act })\n      return { ...state, act }\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}