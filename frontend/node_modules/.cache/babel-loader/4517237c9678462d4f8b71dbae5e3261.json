{"ast":null,"code":"import _classCallCheck from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/src/components/PostEdit.js\";\nimport React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { update, fetchupdate } from '../actions/notes';\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport Dropzone from 'react-dropzone';\nimport classNames from 'classnames';\nimport { FaBitcoin, FaPaperPlane, FaHome, FaReact, FaPython, FaArrowAltCircleDown } from 'react-icons/fa';\nimport { ToastConsumer, ToastProvider, withToastManager } from 'react-toast-notifications';\nvar thumbsContainer = {\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  marginTop: 16\n};\nvar thumbInner = {\n  display: 'flex',\n  minWidth: 0,\n  overflow: 'hidden'\n};\nvar img = {\n  display: 'block',\n  width: 'auto',\n  height: '100%',\n  marginTop: '0.5rem'\n};\n\nvar PostEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostEdit, _Component);\n\n  function PostEdit(props) {\n    var _this;\n\n    _classCallCheck(this, PostEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PostEdit).call(this, props));\n\n    _this.handleChange = function (acceptedFiles, event) {\n      _this.setState({\n        files: acceptedFiles.map(function (file) {\n          return Object.assign(file, {\n            preview: URL.createObjectURL(file)\n          });\n        }),\n        file: null\n      });\n\n      console.log(event);\n      console.log(acceptedFiles);\n    };\n\n    _this.state = {\n      files: [],\n      file: null\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PostEdit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var pk = this.props.match.params.pk;\n      this.props.fetchupdate(pk, function () {\n        _this2.props.initialize(_this2.props.initialValues);\n\n        _this2.setState({\n          file: _this2.props.initialValues.image\n        });\n      });\n    }\n  }, {\n    key: \"renderField\",\n    value: function renderField(field) {\n      var _field$meta = field.meta,\n          touched = _field$meta.touched,\n          error = _field$meta.error;\n      console.log(this.state);\n      var name = this.props.post.name;\n      console.log(field);\n      console.log(this.state);\n      var className = \"form-group \".concat(touched && error ? 'has-danger' : touched && !error ? 'has-none' : ''); // field.meta.error is an automatic property added to field object\n      // from validate function\n\n      return React.createElement(\"div\", {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, field.label), React.createElement(\"input\", Object.assign({\n        className: \"form-control rounded-0\",\n        type: \"\".concat(field.type)\n      }, field.input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"text-danger text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, touched ? error : '')));\n    }\n  }, {\n    key: \"renderDropzone\",\n    value: function renderDropzone(field) {\n      var _this3 = this;\n\n      console.log(field);\n      return React.createElement(\"div\", {\n        className: \"bg-dark p-2 text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Hello, how you dey?\", React.createElement(Dropzone, {\n        accept: \"image/jpeg, image/png\",\n        multiple: false,\n        onDrop: function onDrop(filesToUpload, event) {\n          return field.input.onChange(_this3.handleChange(filesToUpload, event));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, function (_ref) {\n        var getRootProps = _ref.getRootProps,\n            getInputProps = _ref.getInputProps,\n            isDragActive = _ref.isDragActive;\n        console.log(getInputProps());\n        console.log(getRootProps());\n        var arrow = {\n          color: 'white'\n        };\n\n        var files = _this3.state.files.map(function (file) {\n          return React.createElement(\"div\", {\n            className: \"row h-100 p-3 align-middle justify-content-center\",\n            key: file.name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: file.preview,\n            style: {\n              width: '150px',\n              height: '100%'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }));\n        });\n\n        return React.createElement(\"div\", Object.assign({}, getRootProps({\n          onClick: function onClick(event) {\n            return console.log(event);\n          }\n        }), {\n          className: classNames('dropzone', 'container', {\n            'dropzone--isActive': isDragActive\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        })), isDragActive ? React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \"Drop files here...\") : React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, \"Try dropping some files here, or click to select files to upload.\"), React.createElement(\"p\", {\n          className: \"python\",\n          style: {\n            arrow: arrow\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(FaArrowAltCircleDown, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"container\",\n          style: {\n            height: '150px',\n            border: '3px solid white'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, _this3.state.file ? React.createElement(\"div\", {\n          className: \"row h-100 p-3 align-middle justify-content-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: _this3.state.file,\n          style: {\n            width: '150px',\n            height: '100%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        })) : files));\n      }));\n    } // Dry up your code once you seetwo pieces of JSX looking similar\n    // Dont duplicate logic, you can pass arbitrry properties in the component\n    // and they would be passed to the field props.. it can be any name you choose\n\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(values) {\n      var _this4 = this;\n\n      var pk = this.props.match.params.pk;\n      values['image'] = this.state.files[0];\n      var body = new FormData();\n      body.append('name', values.name);\n      body.append('heading', values.heading);\n      body.append('description', values.description);\n      body.append('image', this.state.files[0]);\n      this.props.update(pk, body, function () {\n        _this4.props.toastManager.add('Edit Complete', {\n          appearance: 'success'\n        });\n\n        _this4.props.history.push('/posts/');\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // In using redux form the submit function is not really handled\n      // by redux-form so we have to involve redux-form in the submittal\n      //\n      var _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          post = _this$props.post;\n\n      if (!post) {\n        return React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        // dis is pulled from the form helper that is included in content\n        console.log(this.props);\n        var _this$props$post = this.props.post,\n            name = _this$props$post.name,\n            heading = _this$props$post.heading,\n            description = _this$props$post.description;\n        return React.createElement(\"div\", {\n          className: \"login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"container pt-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          className: \"text-center pt-5 text-white text-uppercase header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, \"Edit \", name, \" post\"), React.createElement(\"div\", {\n          className: \"row justify-content-center mt-3 text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          className: \"px-2 bg-dark p-3 text-white rounded col-md-7 col-lg-7\",\n          onSubmit: handleSubmit(this.onSubmit.bind(this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, React.createElement(Field, {\n          label: \"Name\",\n          name: \"name\",\n          type: \"text\",\n          valu: name,\n          placeholder: \"Name\",\n          component: this.renderField.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }), React.createElement(Field, {\n          label: \"Heading\",\n          name: \"heading\",\n          type: \"text\",\n          valu: heading,\n          component: this.renderField.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }), React.createElement(Field, {\n          label: \"Description\",\n          name: \"description\",\n          valu: description,\n          component: this.renderField.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }), React.createElement(Field, {\n          name: \"image\",\n          type: \"file\",\n          component: this.renderDropzone.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary rounded-0 my-3 mx-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, \"Submit\"), React.createElement(Link, {\n          to: \"/posts\",\n          className: \"btn btn-success rounded-0 mx-2 my-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, \"Cancel\")))));\n      }\n    }\n  }]);\n\n  return PostEdit;\n}(Component); // define a helper function to validate the form and pass it to redux\n// form helper\n// name property must be identical to show up in errors object\n\n\nfunction validate(values) {\n  // inorder to validate input return a object we create from validate\n  // function....\n  var errors = {}; // Validate the input from 'values'\n\n  if (!values.name) {\n    errors.name = 'Enter a name';\n  }\n\n  if (!values.heading) {\n    errors.heading = 'Enter a heading';\n  }\n\n  if (!values.description) {\n    errors.description = 'Enter a Description';\n  } // if (!values.agree || values.agree == false) {\n  //  errors.agree = 'Hello'\n  // }\n  // if errors is empty the form is ready to submit,\n  // else there is a problem and redux form displays errors object\n\n\n  return errors;\n}\n\nfunction mapStateToProps(_ref2, ownProps) {\n  var posts = _ref2.posts;\n  console.log(posts);\n  var post = posts[ownProps.match.params.pk];\n  return {\n    post: post,\n    initialValues: posts.initialValues\n  };\n}\n\nexport default reduxForm({\n  validate: validate,\n  // converted to ES6 syntax (validate: validate)\n  form: 'PostEditForm'\n})(connect(mapStateToProps, {\n  update: update,\n  fetchupdate: fetchupdate\n})(withToastManager(PostEdit)));","map":{"version":3,"sources":["/home/devcode/Desktop/django-projects/Djang-React/react/frontend/src/components/PostEdit.js"],"names":["React","Component","Field","reduxForm","Link","connect","update","fetchupdate","_","PropTypes","Dropzone","classNames","FaBitcoin","FaPaperPlane","FaHome","FaReact","FaPython","FaArrowAltCircleDown","ToastConsumer","ToastProvider","withToastManager","thumbsContainer","display","flexDirection","flexWrap","marginTop","thumbInner","minWidth","overflow","img","width","height","PostEdit","props","handleChange","acceptedFiles","event","setState","files","map","file","Object","assign","preview","URL","createObjectURL","console","log","state","bind","pk","match","params","initialize","initialValues","image","field","meta","touched","error","name","post","className","label","type","input","filesToUpload","onChange","getRootProps","getInputProps","isDragActive","arrow","color","onClick","border","values","body","FormData","append","heading","description","toastManager","add","appearance","history","push","handleSubmit","onSubmit","renderField","renderDropzone","validate","errors","mapStateToProps","ownProps","posts","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { update, fetchupdate } from '../actions/notes'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport Dropzone from 'react-dropzone'\nimport classNames from 'classnames'\nimport { FaBitcoin,FaPaperPlane,FaHome,FaReact, FaPython,FaArrowAltCircleDown } from 'react-icons/fa'\nimport { ToastConsumer, ToastProvider, withToastManager } from 'react-toast-notifications'\n\n\nconst thumbsContainer = {\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  marginTop: 16\n};\n\n\nconst thumbInner = {\n  display: 'flex',\n  minWidth: 0,\n  overflow: 'hidden'\n}\n\nconst img = {\n  display: 'block',\n  width: 'auto',\n  height: '100%',\n  marginTop: '0.5rem'\n};\n\nclass PostEdit extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      files:[],\n      file: null\n    }\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  componentDidMount () {\n    const { pk } = this.props.match.params\n    this.props.fetchupdate(pk, () => {\n    this.props.initialize(this.props.initialValues)\n    this.setState({ file:this.props.initialValues.image })\n    })\n\n  }\n\n    handleChange = (acceptedFiles,event) =>{\n    this.setState({files:acceptedFiles.map(file=>Object.assign(file, {\n      preview: URL.createObjectURL(file)\n    })), file:null})\n    console.log(event)\n    console.log(acceptedFiles)\n  }\n\n  renderField (field) {\n    const { meta: { touched, error } } = field\n    console.log(this.state)\n    const { name } = this.props.post\n    console.log(field)\n    console.log(this.state)\n    const className = `form-group ${touched && error ? 'has-danger'\n      : touched && !error ? 'has-none' : ''}`\n\n    // field.meta.error is an automatic property added to field object\n    // from validate function\n    return (\n      <div className={className}>\n        <label>{field.label}</label>\n        <input\n          className='form-control rounded-0'\n          type={`${field.type}`}\n          {...field.input}\n        />\n        <div className='text-danger text-center'>\n          <small>{touched ? error : ''}</small>\n        </div>\n      </div>\n    )\n  }\n\n  renderDropzone(field){\n    console.log(field)\n    return(\n      <div className='bg-dark p-2 text-white'>\n        Hello, how you dey?\n        <Dropzone accept='image/jpeg, image/png' multiple={false} onDrop={\n          ( filesToUpload, event ) => field.input.onChange(this.handleChange(filesToUpload,event))\n        }>\n        {({getRootProps, getInputProps, isDragActive}) => {\n          console.log(getInputProps())\n          console.log(getRootProps())\n          const arrow = {\n              color: 'white'\n          }\n          const files = this.state.files.map(file => {\n            return (\n              <div className='row h-100 p-3 align-middle justify-content-center' key={file.name}>\n            <img \n            src={file.preview}\n            style={{ width: '150px',height: '100%' }}/>\n            </div>\n            )\n          })\n          return (\n            <div\n              {...getRootProps({\n                onClick:  event => console.log(event)\n              })}\n              className={classNames('dropzone','container', {'dropzone--isActive': isDragActive})}\n            >\n              <input {...getInputProps()} />\n              {\n                isDragActive ?\n                  <p>Drop files here...</p> :\n                  <p>Try dropping some files here, or click to select files to upload.</p>\n              }\n              <p className='python' style={{ arrow }}><span><FaArrowAltCircleDown /></span>\n      </p>\n            <div \n            className='container'\n            style={{ \n              height:'150px',\n              border:'3px solid white'\n              }}>\n\n                {this.state.file ?\n                <div className='row h-100 p-3 align-middle justify-content-center'>\n            <img \n            src={this.state.file}\n            style={{ width: '150px',height: '100%' }}/>\n            </div>  :files}\n\n\n              </div>\n            </div>\n             \n          )\n        }}\n      </Dropzone>\n      </div>)\n  }\n\n  // Dry up your code once you seetwo pieces of JSX looking similar\n  // Dont duplicate logic, you can pass arbitrry properties in the component\n  // and they would be passed to the field props.. it can be any name you choose\n\n  onSubmit (values) {\n    const { pk } = this.props.match.params\n    values['image'] = this.state.files[0]\n    let body = new FormData()\n    body.append('name', values.name)\n    body.append('heading', values.heading)\n    body.append('description', values.description)\n    body.append('image', this.state.files[0])\n    this.props.update(pk, body, () => {\n      this.props.toastManager.add('Edit Complete', { appearance: 'success' })\n      this.props.history.push('/posts/')\n    })\n  }\n\n  render () {\n    // In using redux form the submit function is not really handled\n    // by redux-form so we have to involve redux-form in the submittal\n    //\n\n    const { handleSubmit, post } = this.props\n    if (!post) {\n      return (<h3>Loading...</h3>)\n    } else {\n      // dis is pulled from the form helper that is included in content\n      console.log(this.props)\n      const { name, heading, description } = this.props.post\n\n      return (\n        <div className='login'>\n          <div className='container pt-3'>\n\n            <h2 className='text-center pt-5 text-white text-uppercase header'>Edit {name} post</h2>\n            <div className='row justify-content-center mt-3 text-center'>\n              <form\n                className='px-2 bg-dark p-3 text-white rounded col-md-7 col-lg-7'\n                onSubmit={handleSubmit(this.onSubmit.bind(this))}>\n                <Field\n                  label='Name'\n                  name='name'\n                  type='text'\n                  valu={name}\n                  placeholder='Name'\n                  component={this.renderField.bind(this)}\n                />\n                <Field\n                  label='Heading'\n                  name='heading'\n                  type='text'\n                  valu={heading}\n                  component={this.renderField.bind(this)}\n                />\n                <Field\n                  label='Description'\n                  name='description'\n                  valu={description}\n                  component={this.renderField.bind(this)}\n                />\n                <Field \n                name='image'\n                type='file'\n                component={this.renderDropzone.bind(this)}\n              />\n\n                <button type='submit' className='btn btn-primary rounded-0 my-3 mx-2'>Submit</button>\n                <Link to='/posts' className='btn btn-success rounded-0 mx-2 my-3'>Cancel</Link>\n\n              </form>\n\n            </div>\n\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\n// define a helper function to validate the form and pass it to redux\n// form helper\n// name property must be identical to show up in errors object\nfunction validate (values) {\n  // inorder to validate input return a object we create from validate\n  // function....\n  const errors = {}\n  // Validate the input from 'values'\n\n  if (!values.name) {\n    errors.name = 'Enter a name'\n  }\n\n  if (!values.heading) {\n    errors.heading = 'Enter a heading'\n  }\n\n  if (!values.description) {\n    errors.description = 'Enter a Description'\n  }\n\n  // if (!values.agree || values.agree == false) {\n  //  errors.agree = 'Hello'\n  // }\n\n  // if errors is empty the form is ready to submit,\n  // else there is a problem and redux form displays errors object\n  return errors\n}\n\n\nfunction mapStateToProps ({ posts }, ownProps) {\n  console.log(posts)\n  const post = posts[ownProps.match.params.pk]\n  return { post: post,\n    initialValues:posts.initialValues\n  }\n}\n\nexport default reduxForm({\n  validate, // converted to ES6 syntax (validate: validate)\n  form: 'PostEditForm',\n})(connect(mapStateToProps, { update, fetchupdate })(withToastManager(PostEdit)))\n"]},"metadata":{},"sourceType":"module"}