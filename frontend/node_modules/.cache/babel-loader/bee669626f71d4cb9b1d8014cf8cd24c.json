{"ast":null,"code":"import _objectWithoutProperties from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Switch, Redirect, BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducers from './reducers';\nimport { Provider, connect } from 'react-redux';\nimport { login, check_auth, logout } from './actions/auth';\nimport thunk from 'redux-thunk';\nimport promise from 'redux-promise';\nimport BaseLayout from './components/BaseLayout';\nvar store = applyMiddleware(thunk)(createStore); // remind me to change those if calls made mistake somewhere\n\nvar RootContainerComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RootContainerComponent, _Component);\n\n  function RootContainerComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RootContainerComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RootContainerComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.PrivateRoute = function (_ref) {\n      var ChildComponent = _ref.component,\n          rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n      return React.createElement(Route, Object.assign({}, rest, {\n        render: function render(props) {\n          if (_this.props.auth.isLoading) {\n            return React.createElement(\"em\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 24\n              },\n              __self: this\n            }, \"Loading....\");\n          } else if (!_this.props.auth.isAuthenticated) {\n            return React.createElement(Redirect, {\n              to: \"/login\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 26\n              },\n              __self: this\n            });\n          } else {\n            return React.createElement(ChildComponent, Object.assign({}, props, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 29\n              },\n              __self: this\n            }));\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(RootContainerComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.check_auth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var PrivateRoute = this.PrivateRoute;\n      var _this$props = this.props,\n          auth = _this$props.auth,\n          logout = _this$props.logout;\n      return React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(BaseLayout, {\n        auth: auth,\n        logout: logout,\n        PrivateRoute: PrivateRoute,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return RootContainerComponent;\n}(Component);\n\nfunction mapStateToProps(_ref2) {\n  var auth = _ref2.auth;\n  return {\n    auth: auth\n  };\n}\n\nvar RootContainer = connect(mapStateToProps, {\n  check_auth: check_auth,\n  logout: logout\n})(RootContainerComponent);\n\nvar App =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(App, _Component2);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    // constructor (props) {\n    //   super(props)\n    //   this.state = {\n    //     logged_in: !!localStorage.getItem('token'),\n    //     username: ''\n    //   }\n    // }\n    value: function componentDidMount() {\n      console.log(this.state);\n      console.log(this.props); // if (this.state.logged_in) {\n      //   fetch('http://localhost:8000/api/current_user', {\n      //     headers: {\n      //       Authorization: `JWT $(localStorage.getItem('token'))`\n      //     }\n      //   })\n      //     .then(res => res.json())\n      //     .then(json => {\n      //       this.setState({ username: json.username })\n      //     })\n      // }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Provider, {\n        store: store(reducers),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(RootContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; // connect(mapStateToProps, { login })(App)","map":{"version":3,"sources":["/home/devcode/Desktop/django-projects/Djang-React/react/frontend/src/App.js"],"names":["React","Component","Route","Switch","Redirect","BrowserRouter","createStore","applyMiddleware","reducers","Provider","connect","login","check_auth","logout","thunk","promise","BaseLayout","store","RootContainerComponent","PrivateRoute","ChildComponent","component","rest","props","auth","isLoading","isAuthenticated","mapStateToProps","RootContainer","App","console","log","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Route,Switch, Redirect, BrowserRouter } from 'react-router-dom'\nimport './App.css'\nimport { createStore, applyMiddleware } from 'redux'\nimport reducers from './reducers'\nimport { Provider, connect } from 'react-redux'\nimport { login,check_auth,logout } from './actions/auth'\nimport thunk from 'redux-thunk'\nimport promise from 'redux-promise'\nimport BaseLayout from './components/BaseLayout'\n\nconst store = applyMiddleware(thunk)(createStore)\n// remind me to change those if calls made mistake somewhere\n\nclass RootContainerComponent extends Component {\n\n  componentDidMount(){\n    this.props.check_auth()\n  }\n\n  PrivateRoute = ({ component: ChildComponent, ...rest }) =>{\n    return <Route {...rest} render={props => {\n      if(this.props.auth.isLoading){\n        return <em>Loading....</em>\n      }else if(!this.props.auth.isAuthenticated){\n        return <Redirect to='/login'/>\n      }\n      else{\n        return <ChildComponent {...props} />\n      }\n    }}/>\n  }\n\n  render(){\n    let {PrivateRoute}= this\n    const {auth,logout} = this.props\n    return (\n       <BrowserRouter>\n        <BaseLayout auth={auth} logout={logout} PrivateRoute={PrivateRoute} />\n      </BrowserRouter>\n    )\n  }\n}\n\nfunction mapStateToProps({ auth }){\n  return { auth: auth }\n}\n\nlet RootContainer = connect(mapStateToProps, {check_auth,logout})(RootContainerComponent)\n\n\n\n\n\n\n\n\n\nclass App extends Component {\n  // constructor (props) {\n  //   super(props)\n  //   this.state = {\n  //     logged_in: !!localStorage.getItem('token'),\n  //     username: ''\n  //   }\n  // }\n\n  componentDidMount () {\n    console.log(this.state)\n    console.log(this.props)\n    // if (this.state.logged_in) {\n    //   fetch('http://localhost:8000/api/current_user', {\n    //     headers: {\n    //       Authorization: `JWT $(localStorage.getItem('token'))`\n    //     }\n    //   })\n    //     .then(res => res.json())\n    //     .then(json => {\n    //       this.setState({ username: json.username })\n    //     })\n    // }\n  }\n\n  render () {\n    return (\n      <Provider store={store(reducers)}>\n        <RootContainer />\n      </Provider>\n      \n    )\n  }\n}\n\nexport default App\n// connect(mapStateToProps, { login })(App)"]},"metadata":{},"sourceType":"module"}