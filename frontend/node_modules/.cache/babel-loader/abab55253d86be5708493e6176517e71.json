{"ast":null,"code":"import _classCallCheck from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/src/components/PostList.js\";\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchposts } from '../actions/notes';\nimport PostRender from './PostRender';\nimport PropTypes from 'prop-types';\n\nvar PostList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostList, _Component);\n\n  function PostList(props) {\n    var _this;\n\n    _classCallCheck(this, PostList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PostList).call(this, props));\n    _this.state = {\n      likes: 15\n    };\n    return _this;\n  }\n\n  _createClass(PostList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchposts();\n    }\n  }, {\n    key: \"navigateright\",\n    value: function navigateright() {\n      this.props.fetchposts(this.props.posts.next);\n    }\n  }, {\n    key: \"navigateleft\",\n    value: function navigateleft() {\n      this.props.fetchposts(this.props.posts.previous);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props);\n      var posts = this.props.posts;\n\n      if (!posts) {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, \"Loading.......\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Posts\"), React.createElement(PostRender, {\n        post: this.props.posts,\n        likes: this.state.likes,\n        link: this.props.history,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), posts.previous !== null ? React.createElement(\"button\", {\n        className: \"btn btn-default mx-2 my-4 rounded-0\",\n        onClick: function onClick() {\n          _this2.props.fetchposts(_this2.props.posts.previous);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Previous\") : '', posts.next !== null ? React.createElement(\"button\", {\n        className: \"btn btn-primary mx-2 my-4 rounded-0\",\n        onClick: function onClick() {\n          _this2.props.fetchposts(_this2.props.posts.next);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Next\") : '', React.createElement(Link, {\n        className: \"btn btn-info rounded-0\",\n        to: \"/posts/new\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Create Post\"));\n    }\n  }]);\n\n  return PostList;\n}(Component);\n\nPostList.propTypes = {\n  posts: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(_ref) {\n  var posts = _ref.posts;\n  return {\n    posts: posts\n  };\n}\n\nexport default connect(mapStateToProps, {\n  fetchposts: fetchposts,\n  update: update\n})(PostList);","map":{"version":3,"sources":["/home/devcode/Desktop/django-projects/Djang-React/react/frontend/src/components/PostList.js"],"names":["_","React","Component","Link","connect","fetchposts","PostRender","PropTypes","PostList","props","state","likes","posts","next","previous","console","log","history","propTypes","object","isRequired","mapStateToProps","update"],"mappings":";;;;;;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAEMC,Q;;;;;AACJ,oBAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAFkB;AAKnB;;;;wCAEoB;AACnB,WAAKF,KAAL,CAAWJ,UAAX;AACD;;;oCAEgB;AACf,WAAKI,KAAL,CAAWJ,UAAX,CAAsB,KAAKI,KAAL,CAAWG,KAAX,CAAiBC,IAAvC;AACD;;;mCACe;AACd,WAAKJ,KAAL,CAAWJ,UAAX,CAAsB,KAAKI,KAAL,CAAWG,KAAX,CAAiBE,QAAvC;AACD;;;6BAES;AAAA;;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAjB;AADQ,UAEAG,KAFA,GAEU,KAAKH,KAFf,CAEAG,KAFA;;AAGR,UAAI,CAACA,KAAL,EAAY;AACV,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAR;AACD;;AAED,aACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG,KAA7B;AAAoC,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,KAAtD;AAA6D,QAAA,IAAI,EAAE,KAAKF,KAAL,CAAWQ,OAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGIL,KAAK,CAACE,QAAN,KAAmB,IAAnB,GACE;AACA,QAAA,SAAS,EAAC,qCADV;AAEA,QAAA,OAAO,EACL,mBAAM;AACJ,UAAA,MAAI,CAACL,KAAL,CAAWJ,UAAX,CAAsB,MAAI,CAACI,KAAL,CAAWG,KAAX,CAAiBE,QAAvC;AACD,SALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,GASE,EAZN,EAaIF,KAAK,CAACC,IAAN,KAAe,IAAf,GACE;AACA,QAAA,SAAS,EAAC,qCADV;AAEA,QAAA,OAAO,EACL,mBAAM;AACJ,UAAA,MAAI,CAACJ,KAAL,CAAWJ,UAAX,CAAsB,MAAI,CAACI,KAAL,CAAWG,KAAX,CAAiBC,IAAvC;AACD,SALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,GASE,EAtBN,EAwBE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,wBAAhB;AAAyC,QAAA,EAAE,EAAC,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAxBF,CADF;AA6BD;;;;EAvDoBX,S;;AA0DvBM,QAAQ,CAACU,SAAT,GAAqB;AACnBN,EAAAA,KAAK,EAAEL,SAAS,CAACY,MAAV,CAAiBC;AADL,CAArB;;AAIA,SAASC,eAAT,OAAqC;AAAA,MAATT,KAAS,QAATA,KAAS;AACnC,SAAO;AAAEA,IAAAA,KAAK,EAAEA;AAAT,GAAP;AACD;;AAED,eAAeR,OAAO,CAACiB,eAAD,EAAkB;AAAEhB,EAAAA,UAAU,EAAVA,UAAF;AAAciB,EAAAA,MAAM,EAANA;AAAd,CAAlB,CAAP,CAAiDd,QAAjD,CAAf","sourcesContent":["import _ from 'lodash'\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { fetchposts } from '../actions/notes'\nimport PostRender from './PostRender'\nimport PropTypes from 'prop-types'\n\nclass PostList extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      likes: 15\n    }\n  }\n\n  componentDidMount () {\n    this.props.fetchposts()\n  }\n\n  navigateright () {\n    this.props.fetchposts(this.props.posts.next)\n  }\n  navigateleft () {\n    this.props.fetchposts(this.props.posts.previous)\n  }\n\n  render () {\n    console.log(this.props)\n    const { posts } = this.props\n    if (!posts) {\n      return (<h1>Loading.......</h1>)\n    }\n\n    return (\n      <div className='container text-center'>\n        <h3>Posts</h3>\n        <PostRender post={this.props.posts} likes={this.state.likes} link={this.props.history} />\n        { posts.previous !== null\n          ? <button\n            className='btn btn-default mx-2 my-4 rounded-0'\n            onClick={\n              () => {\n                this.props.fetchposts(this.props.posts.previous)\n              }}>\n              Previous\n          </button>\n          : ''}\n        { posts.next !== null\n          ? <button\n            className='btn btn-primary mx-2 my-4 rounded-0'\n            onClick={\n              () => {\n                this.props.fetchposts(this.props.posts.next)\n              }}>\n              Next\n          </button>\n          : ''}\n\n        <Link className='btn btn-info rounded-0' to='/posts/new'>Create Post</Link>\n\n      </div>\n    )\n  }\n}\n\nPostList.propTypes = {\n  posts: PropTypes.object.isRequired\n}\n\nfunction mapStateToProps ({ posts }) {\n  return { posts: posts }\n}\n\nexport default connect(mapStateToProps, { fetchposts, update })(PostList)\n"]},"metadata":{},"sourceType":"module"}