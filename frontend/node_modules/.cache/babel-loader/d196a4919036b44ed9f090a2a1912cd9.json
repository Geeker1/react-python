{"ast":null,"code":"import _defineProperty from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _ from 'lodash';\nimport { FETCH_POSTS, FETCH_POST } from '../actions/notes';\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_POST:\n      console.log(state);\n      return _objectSpread({}, state, _defineProperty({}, action.payload.data.pk, action.payload.data));\n\n    case FETCH_POSTS:\n      var over = action.payload.data;\n      over.results = _.mapKeys(over.results, 'pk');\n      console.log(_.merge(over, over));\n      return over;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/devcode/Desktop/django-projects/Djang-React/react/frontend/src/reducers/code.js"],"names":["_","FETCH_POSTS","FETCH_POST","state","action","type","console","log","payload","data","pk","over","results","mapKeys","merge"],"mappings":";;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,kBAAxC;AAEA,eAAe,YAA8B;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKH,UAAL;AACCI,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,+BAAYA,KAAZ,sBAAoBC,MAAM,CAACI,OAAP,CAAeC,IAAf,CAAoBC,EAAxC,EAA6CN,MAAM,CAACI,OAAP,CAAeC,IAA5D;;AACD,SAAKR,WAAL;AACE,UAAMU,IAAI,GAAGP,MAAM,CAACI,OAAP,CAAeC,IAA5B;AACAE,MAAAA,IAAI,CAACC,OAAL,GAAeZ,CAAC,CAACa,OAAF,CAAUF,IAAI,CAACC,OAAf,EAAwB,IAAxB,CAAf;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYP,CAAC,CAACc,KAAF,CAAQH,IAAR,EAAcA,IAAd,CAAZ;AACA,aAAQA,IAAR;;AACF;AACE,aAAOR,KAAP;AAVJ;AAYD","sourcesContent":["import _ from 'lodash'\nimport { FETCH_POSTS, FETCH_POST } from '../actions/notes'\n\nexport default function (state = {}, action) {\n  switch (action.type) {\n    case FETCH_POST:\n    \tconsole.log(state)\n    \treturn { ...state, [action.payload.data.pk]: action.payload.data }\n    case FETCH_POSTS:\n      const over = action.payload.data\n      over.results = _.mapKeys(over.results, 'pk')\n      console.log(_.merge(over, over))\n      return (over)\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}