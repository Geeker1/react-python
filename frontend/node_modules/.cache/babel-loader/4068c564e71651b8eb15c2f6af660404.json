{"ast":null,"code":"import _classCallCheck from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/src/components/PostList.js\";\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchposts, update } from '../actions/notes';\nimport PostRender from './PostRender';\nimport PropTypes from 'prop-types';\nimport { Field, reduxForm } from 'redux-form';\nimport logo from \"../logo.svg\";\n\nvar PostList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostList, _Component);\n\n  function PostList(props) {\n    var _this;\n\n    _classCallCheck(this, PostList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PostList).call(this, props));\n    _this.state = {\n      likes: 15\n    };\n    _this.hello = _this.hello.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PostList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchposts();\n    }\n  }, {\n    key: \"navigateright\",\n    value: function navigateright() {\n      this.props.fetchposts(this.props.posts.next);\n    }\n  }, {\n    key: \"navigateleft\",\n    value: function navigateleft() {\n      this.props.fetchposts(this.props.posts.previous);\n    }\n  }, {\n    key: \"hello\",\n    value: function hello(num) {\n      this.props.update(num);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props);\n      var posts = this.props.posts;\n      var likes = this.state.likes;\n\n      if (!posts) {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \"Loading.......\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Posts\"), React.createElement(PostRender, {\n        post: this.props,\n        likes: this.state.likes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), posts.previous !== null ? React.createElement(\"button\", {\n        className: \"btn btn-default mx-2 my-4 rounded-0\",\n        onClick: function onClick() {\n          _this2.props.fetchposts(_this2.props.posts.previous);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Previous\") : '', posts.next !== null ? React.createElement(\"button\", {\n        className: \"btn btn-primary mx-2 my-4\",\n        onClick: function onClick() {\n          hello();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Next\") : '', React.createElement(Link, {\n        className: \"btn btn-info rounded-0\",\n        to: \"/posts/new\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Create Post\"), React.createElement(\"button\", {\n        className: \"btn btn-info\",\n        onClick: function onClick() {\n          _this2.setState({\n            likes: likes + 1\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Change Likes\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, likes), React.createElement(\"button\", {\n        className: \"btn\",\n        onClick: function onClick() {\n          _this2.props.update(31, likes, function () {\n            alert('clicked!!');\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"click me\"));\n    }\n  }]);\n\n  return PostList;\n}(Component);\n\nPostList.propTypes = {\n  posts: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(_ref) {\n  var posts = _ref.posts;\n  return {\n    posts: posts\n  };\n}\n\nexport default reduxForm({\n  form: 'PostUser'\n})(connect(mapStateToProps, {\n  fetchposts: fetchposts,\n  update: update\n})(PostList));","map":{"version":3,"sources":["/home/devcode/Desktop/django-projects/Djang-React/react/frontend/src/components/PostList.js"],"names":["_","React","Component","Link","connect","fetchposts","update","PostRender","PropTypes","Field","reduxForm","PostList","props","state","likes","hello","bind","posts","next","previous","num","console","log","setState","alert","propTypes","object","isRequired","mapStateToProps","form"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { fetchposts, update } from '../actions/notes'\nimport PostRender from './PostRender'\nimport PropTypes from 'prop-types'\nimport { Field, reduxForm } from 'redux-form'\nimport logo from '../logo.svg'\n\nclass PostList extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      likes: 15\n    }\n\n    this.hello = this.hello.bind(this)\n  }\n\n  componentDidMount () {\n    this.props.fetchposts()\n  }\n\n  navigateright () {\n    this.props.fetchposts(this.props.posts.next)\n  }\n  navigateleft () {\n    this.props.fetchposts(this.props.posts.previous)\n  }\n\n  hello (num) {\n    this.props.update(num)\n  }\n\n  render () {\n    console.log(this.props)\n    const { posts } = this.props\n    const { likes } = this.state\n    if (!posts) {\n      return (<h1>Loading.......</h1>)\n    }\n\n    return (\n      <div className='container text-center'>\n        <h3 className='mt-4'>Posts</h3>\n        <PostRender post={this.props} likes={this.state.likes} />\n        { posts.previous !== null\n          ? <button\n            className='btn btn-default mx-2 my-4 rounded-0'\n            onClick={\n              () => {\n                this.props.fetchposts(this.props.posts.previous)\n              }}>\n              Previous\n          </button>\n          : ''}\n        { posts.next !== null\n          ? <button\n            className='btn btn-primary mx-2 my-4'\n            onClick={\n              () => {\n                hello()\n              }}>\n              Next\n          </button>\n          : ''}\n\n        <Link className='btn btn-info rounded-0' to='/posts/new'>Create Post</Link>\n        <button className='btn btn-info' onClick={() => {\n          this.setState({ likes: likes + 1 })\n        }}>Change Likes</button>\n        <p>{likes}</p>\n        <button\n          className='btn'\n          onClick={\n            () => {\n              this.props.update(31, likes, () => { alert('clicked!!') })\n            }}>click me</button>\n      </div>\n    )\n  }\n}\n\nPostList.propTypes = {\n  posts: PropTypes.object.isRequired\n}\n\nfunction mapStateToProps ({ posts }) {\n  return { posts: posts }\n}\n\nexport default reduxForm({\n  form: 'PostUser'\n})(connect(mapStateToProps, { fetchposts, update })(PostList))\n"]},"metadata":{},"sourceType":"module"}