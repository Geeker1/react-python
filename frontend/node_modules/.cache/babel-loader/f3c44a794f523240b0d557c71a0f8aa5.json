{"ast":null,"code":"import _classCallCheck from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/src/components/LoginForm.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, reduxForm } from 'redux-form';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login } from '../actions/auth';\nimport { ToastConsumer, ToastProvider, withToastManager } from 'react-toast-notifications';\n\nvar LoginForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginForm, _Component);\n\n  function LoginForm() {\n    _classCallCheck(this, LoginForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(LoginForm).apply(this, arguments));\n  }\n\n  _createClass(LoginForm, [{\n    key: \"renderField\",\n    value: function renderField(field) {\n      var _field$meta = field.meta,\n          touched = _field$meta.touched,\n          error = _field$meta.error;\n      var className = \"form-group \".concat(touched && error ? 'has-danger' : touched && !error ? 'has-none' : ''); // field.meta.error is an automatic property added to field object\n      // from validate function\n\n      return React.createElement(\"div\", {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, field.label), React.createElement(\"input\", Object.assign({\n        className: \"form-control rounded-0\",\n        type: \"\".concat(field.type)\n      }, field.input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, touched ? error : '')));\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(values) {\n      var _this = this;\n\n      this.props.login(values, function () {\n        var history = _this.props.history;\n        history.push('');\n\n        _this.props.toastManager.add(\"You've been logged in.\", {\n          appearance: 'success'\n        }, function (id) {\n          _this.props.toastManager.remove(id);\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // In using redux form the submit function is not really handled\n      // by redux-form so we have to involve redux-form in the submittal\n      //\n      var handleSubmit = this.props.handleSubmit; // dis is pulled from the form helper that is included in content\n\n      console.log(this.props);\n      return React.createElement(\"div\", {\n        className: \"login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container pado\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row px-2 justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"p-3 col-md-6 col-lg-6 text-white bg-dark\",\n        onSubmit: handleSubmit(this.onSubmit.bind(this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Login\"), React.createElement(Field, {\n        label: \"Username\",\n        name: \"username\",\n        type: \"text\",\n        component: this.renderField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Field, {\n        label: \"Password\",\n        name: \"password\",\n        type: \"password\",\n        component: this.renderField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"w-100 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-info rounded px-5 py-2 my-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Submit\")))), React.createElement(\"p\", {\n        className: \"text-right text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Don't have an account yet ?\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/signup\",\n        className: \"btn btn-info m-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Sign Up\")))));\n    }\n  }]);\n\n  return LoginForm;\n}(Component);\n\nfunction validate(values) {\n  // inorder to validate input return a object we create from validate\n  // function....\n  var errors = {}; // Validate the input from 'values'\n\n  if (!values.username) {\n    errors.name = 'Enter a name';\n  }\n\n  if (!values.password) {\n    errors.password = 'Enter a password';\n  } // if (!values.agree || values.agree == false) {\n  //  errors.agree = 'Hello'\n  // }\n  // if errors is empty the form is ready to submit,\n  // else there is a problem and redux form displays errors object\n\n\n  return errors;\n}\n\nfunction mapStateToProps(_ref) {\n  var auth = _ref.auth;\n  return {\n    authx: auth\n  };\n}\n\nexport default reduxForm({\n  validate: validate,\n  // converted to ES6 syntax (validate: validate)\n  form: 'LoginForm'\n})(connect(mapStateToProps, {\n  login: login\n})(withToastManager(LoginForm)));","map":{"version":3,"sources":["/home/devcode/Desktop/django-projects/Djang-React/react/frontend/src/components/LoginForm.js"],"names":["React","Component","PropTypes","Field","reduxForm","Link","connect","login","ToastConsumer","ToastProvider","withToastManager","LoginForm","field","meta","touched","error","className","label","type","input","values","props","history","push","toastManager","add","appearance","id","remove","handleSubmit","console","log","onSubmit","bind","renderField","validate","errors","username","name","password","mapStateToProps","auth","authx","form"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,gBAAvC,QAA+D,2BAA/D;;IAIMC,S;;;;;;;;;;;;;gCACSC,K,EAAO;AAAA,wBACmBA,KADnB,CACVC,IADU;AAAA,UACFC,OADE,eACFA,OADE;AAAA,UACOC,KADP,eACOA,KADP;AAElB,UAAMC,SAAS,wBAAiBF,OAAO,IAAIC,KAAX,GAAmB,YAAnB,GAC5BD,OAAO,IAAI,CAACC,KAAZ,GAAoB,UAApB,GAAiC,EADtB,CAAf,CAFkB,CAKlB;AACA;;AACA,aACE;AAAK,QAAA,SAAS,EAAEC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQJ,KAAK,CAACK,KAAd,CADF,EAEE;AACE,QAAA,SAAS,EAAC,wBADZ;AAEE,QAAA,IAAI,YAAKL,KAAK,CAACM,IAAX;AAFN,SAGMN,KAAK,CAACO,KAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,EAOE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQL,OAAO,GAAGC,KAAH,GAAW,EAA1B,CADF,CAPF,CADF;AAaD;;;6BAESK,M,EAAQ;AAAA;;AAChB,WAAKC,KAAL,CAAWd,KAAX,CAAiBa,MAAjB,EAAyB,YAAM;AAAA,YACrBE,OADqB,GACT,KAAI,CAACD,KADI,CACrBC,OADqB;AAE7BA,QAAAA,OAAO,CAACC,IAAR,CAAa,EAAb;;AACA,QAAA,KAAI,CAACF,KAAL,CAAWG,YAAX,CAAwBC,GAAxB,CAA4B,wBAA5B,EAAsD;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAAtD,EACE,UAACC,EAAD,EAAM;AAAC,UAAA,KAAI,CAACN,KAAL,CAAWG,YAAX,CAAwBI,MAAxB,CAA+BD,EAA/B;AAAmC,SAD5C;AAED,OALD;AAMD;;;6BACS;AACR;AACA;AACA;AAHQ,UAKAE,YALA,GAKiB,KAAKR,KALtB,CAKAQ,YALA,EAMR;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAjB;AACA,aACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,0CAAhB;AAA2D,QAAA,QAAQ,EAAEQ,YAAY,CAAC,KAAKG,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAD,CAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAC,UADR;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,SAAS,EAAE,KAAKC,WAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EASE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAC,UADR;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,SAAS,EAAE,KAAKA,WAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,EAeE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,qCAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAfF,CADF,CADF,EAsBE;AAAG,QAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,SAAT;AAAmB,QAAA,SAAS,EAAC,kBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,CAtBF,CADF,CADF;AA+BD;;;;EAtEqBjC,S;;AAyExB,SAASkC,QAAT,CAAmBf,MAAnB,EAA2B;AACzB;AACA;AACA,MAAMgB,MAAM,GAAG,EAAf,CAHyB,CAIzB;;AAEA,MAAI,CAAChB,MAAM,CAACiB,QAAZ,EAAsB;AACpBD,IAAAA,MAAM,CAACE,IAAP,GAAc,cAAd;AACD;;AAED,MAAI,CAAClB,MAAM,CAACmB,QAAZ,EAAsB;AACpBH,IAAAA,MAAM,CAACG,QAAP,GAAkB,kBAAlB;AACD,GAZwB,CAczB;AACA;AACA;AAEA;AACA;;;AACA,SAAOH,MAAP;AACD;;AAED,SAASI,eAAT,OAAoC;AAAA,MAARC,IAAQ,QAARA,IAAQ;AAClC,SAAO;AAAEC,IAAAA,KAAK,EAAED;AAAT,GAAP;AACD;;AAED,eAAerC,SAAS,CAAC;AACvB+B,EAAAA,QAAQ,EAARA,QADuB;AACb;AACVQ,EAAAA,IAAI,EAAE;AAFiB,CAAD,CAAT,CAGZrC,OAAO,CAACkC,eAAD,EAAkB;AAAEjC,EAAAA,KAAK,EAALA;AAAF,CAAlB,CAAP,CAAoCG,gBAAgB,CAACC,SAAD,CAApD,CAHY,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Field, reduxForm } from 'redux-form'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { login } from '../actions/auth'\nimport { ToastConsumer, ToastProvider, withToastManager } from 'react-toast-notifications'\n\n\n\nclass LoginForm extends Component {\n  renderField (field) {\n    const { meta: { touched, error } } = field\n    const className = `form-group ${touched && error ? 'has-danger'\n      : touched && !error ? 'has-none' : ''}`\n\n    // field.meta.error is an automatic property added to field object\n    // from validate function\n    return (\n      <div className={className}>\n        <label>{field.label}</label>\n        <input\n          className='form-control rounded-0'\n          type={`${field.type}`}\n          {...field.input}\n        />\n        <div className='text-danger'>\n          <small>{touched ? error : ''}</small>\n        </div>\n      </div>\n    )\n  }\n\n  onSubmit (values) {\n    this.props.login(values, () => {\n      const { history } = this.props\n      history.push('')\n      this.props.toastManager.add(\"You've been logged in.\", { appearance: 'success' },\n        (id)=>{this.props.toastManager.remove(id)})\n    })\n  }\n  render () {\n    // In using redux form the submit function is not really handled\n    // by redux-form so we have to involve redux-form in the submittal\n    //\n\n    const { handleSubmit } = this.props\n    // dis is pulled from the form helper that is included in content\n    console.log(this.props)\n    return (\n      <div className='login'>\n        <div className='container pado'>\n          <div className='row px-2 justify-content-center'>\n            <form className='p-3 col-md-6 col-lg-6 text-white bg-dark' onSubmit={handleSubmit(this.onSubmit.bind(this))}>\n\n              <h4 className='text-center'>Login</h4>\n              <Field\n                label='Username'\n                name='username'\n                type='text'\n                component={this.renderField}\n              />\n              <Field\n                label='Password'\n                name='password'\n                type='password'\n                component={this.renderField}\n              />\n              <div className='w-100 text-center'>\n                <button type='submit' className='btn btn-info rounded px-5 py-2 my-1'>Submit</button>\n\n              </div></form>\n          </div>\n          <p className='text-right text-white'>Don't have an account yet ?\n            <span>\n              <Link to='/signup' className='btn btn-info m-3'>Sign Up</Link></span></p>\n\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction validate (values) {\n  // inorder to validate input return a object we create from validate\n  // function....\n  const errors = {}\n  // Validate the input from 'values'\n\n  if (!values.username) {\n    errors.name = 'Enter a name'\n  }\n\n  if (!values.password) {\n    errors.password = 'Enter a password'\n  }\n\n  // if (!values.agree || values.agree == false) {\n  //  errors.agree = 'Hello'\n  // }\n\n  // if errors is empty the form is ready to submit,\n  // else there is a problem and redux form displays errors object\n  return errors\n}\n\nfunction mapStateToProps ({ auth }) {\n  return { authx: auth }\n}\n\nexport default reduxForm({\n  validate, // converted to ES6 syntax (validate: validate)\n  form: 'LoginForm'\n})(connect(mapStateToProps, { login })(withToastManager(LoginForm)))\n"]},"metadata":{},"sourceType":"module"}