{"ast":null,"code":"import axios from 'axios';\nexport var LOGIN = 'login';\nexport var SIGNUP = 'signup';\nexport var CHECK = 'check';\nexport var LOGIN_ERROR = 'login_error';\nexport function login(values, callback) {\n  var request = axios.post('http://localhost:8000/token-auth/', values);\n  return function (dispatch, getState) {\n    request.then(function (response) {\n      console.log(response.data);\n      dispatch({\n        type: LOGIN,\n        payload: response.data\n      });\n    }).then(function () {\n      return callback();\n    }).catch(function (_ref) {\n      var response = _ref.response;\n      console.log(response.data);\n      console.log(response.status);\n      dispatch({\n        type: LOGIN_ERROR,\n        payload: response.data\n      });\n    });\n  };\n}\nexport var signup = function signup(values, callback) {\n  var request = axios.post('http://localhost:8000/api/sign-user').then(function () {\n    return callback();\n  });\n  console.log(request);\n  return {\n    type: SIGNUP,\n    payload: request\n  };\n};\nexport function check_auth() {\n  return function (dispatch, getState) {\n    var tokenize = getState().auth.token;\n    console.log(tokenize);\n    var request = axios.get('http://localhost:8000/api/current_user', {\n      headers: {\n        Authorization: \"JWT \".concat(tokenize)\n      }\n    });\n    request.then(function (response) {\n      console.log(response.data);\n      dispatch({\n        type: CHECK,\n        payload: tokenize\n      });\n    }).catch(function (_ref2) {\n      var response = _ref2.response;\n      console.log(response.data);\n    });\n  };\n}","map":{"version":3,"sources":["/home/devcode/Desktop/django-projects/Djang-React/react/frontend/src/actions/auth.js"],"names":["axios","LOGIN","SIGNUP","CHECK","LOGIN_ERROR","login","values","callback","request","post","dispatch","getState","then","response","console","log","data","type","payload","catch","status","signup","check_auth","tokenize","auth","token","get","headers","Authorization"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,KAAK,GAAG,OAAd;AACP,OAAO,IAAMC,MAAM,GAAG,QAAf;AACP,OAAO,IAAMC,KAAK,GAAG,OAAd;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;AAEP,OAAO,SAASC,KAAT,CAAgBC,MAAhB,EAAwBC,QAAxB,EAAkC;AACvC,MAAMC,OAAO,GAAGR,KAAK,CAACS,IAAN,CAAW,mCAAX,EAAgDH,MAAhD,CAAhB;AACA,SAAO,UAACI,QAAD,EAAWC,QAAX,EAAwB;AAC7BH,IAAAA,OAAO,CAACI,IAAR,CAAa,UAACC,QAAD,EAAc;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACDN,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAEhB,KAAR;AAAeiB,QAAAA,OAAO,EAAEL,QAAQ,CAACG;AAAjC,OAAD,CAAR;AACA,KAHA,EAGEJ,IAHF,CAGO;AAAA,aAAML,QAAQ,EAAd;AAAA,KAHP,EAGyBY,KAHzB,CAG+B,gBAAkB;AAAA,UAAfN,QAAe,QAAfA,QAAe;AACjDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACO,MAArB;AACAV,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAEb,WAAR;AAAqBc,QAAAA,OAAO,EAAEL,QAAQ,CAACG;AAAvC,OAAD,CAAR;AACA,KAPA;AAQD,GATD;AAUD;AAED,OAAO,IAAMK,MAAM,GAAG,SAATA,MAAS,CAACf,MAAD,EAASC,QAAT,EAAsB;AAC1C,MAAMC,OAAO,GAAGR,KAAK,CAACS,IAAN,CAAW,qCAAX,EACdG,IADc,CACT;AAAA,WAAML,QAAQ,EAAd;AAAA,GADS,CAAhB;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AACA,SAAO;AACLS,IAAAA,IAAI,EAAEf,MADD;AAELgB,IAAAA,OAAO,EAAEV;AAFJ,GAAP;AAID,CARM;AAUP,OAAO,SAASc,UAAT,GAAuB;AAC5B,SAAO,UAACZ,QAAD,EAAWC,QAAX,EAAwB;AAC9B,QAAMY,QAAQ,GAAGZ,QAAQ,GAAGa,IAAX,CAAgBC,KAAjC;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAZ;AACC,QAAMf,OAAO,GAAGR,KAAK,CAAC0B,GAAN,CAAU,wCAAV,EACjB;AAAEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,gBAASL,QAAT;AADN;AAAX,KADiB,CAAhB;AAIDf,IAAAA,OAAO,CAACI,IAAR,CAAa,UAACC,QAAD,EAAc;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAN,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAEd,KAAR;AAAee,QAAAA,OAAO,EAAEK;AAAxB,OAAD,CAAR;AACA,KAHD,EAGGJ,KAHH,CAGS,iBAAkB;AAAA,UAAfN,QAAe,SAAfA,QAAe;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,KALD;AAMA,GAbD;AAcD","sourcesContent":["import axios from 'axios'\n\nexport const LOGIN = 'login'\nexport const SIGNUP = 'signup'\nexport const CHECK = 'check'\nexport const LOGIN_ERROR = 'login_error'\n\nexport function login (values, callback) {\n  const request = axios.post('http://localhost:8000/token-auth/', values)\n  return (dispatch, getState) => {\n  \t\trequest.then((response) => {\n  \t\t\tconsole.log(response.data)\n  \t\tdispatch({ type: LOGIN, payload: response.data })\n  \t}).then(() => callback()).catch(({ response }) => {\n  \t\tconsole.log(response.data)\n  \t\tconsole.log(response.status)\n  \t\tdispatch({ type: LOGIN_ERROR, payload: response.data })\n  \t})\n  }\n}\n\nexport const signup = (values, callback) => {\n  const request = axios.post('http://localhost:8000/api/sign-user')\n  \t.then(() => callback())\n  console.log(request)\n  return {\n    type: SIGNUP,\n    payload: request\n  }\n}\n\nexport function check_auth () {\n  return (dispatch, getState) => {\n  \tconst tokenize = getState().auth.token\n  \tconsole.log(tokenize)\n    const request = axios.get('http://localhost:8000/api/current_user',\n  \t{ headers: {\n  \t  \t\tAuthorization: `JWT ${tokenize}`\n  \t  \t} })\n  \trequest.then((response) => {\n  \t\tconsole.log(response.data)\n  \t\tdispatch({ type: CHECK, payload: tokenize })\n  \t}).catch(({ response }) => {\n  \t\tconsole.log(response.data)\n  \t})\n  }\n}\n"]},"metadata":{},"sourceType":"module"}