{"ast":null,"code":"import _defineProperty from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _ from 'lodash';\nimport { FETCH_POSTS, FETCH_POST, DELETE_POST, UPDATE, FETCH_POST_UPDATE } from '../actions/notes';\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_POST_UPDATE:\n      console.log(_objectSpread({}, state, _defineProperty({}, action.payload.data.pk, action.payload.data)));\n      return _objectSpread({}, state, _defineProperty({}, action.payload.data.pk, action.payload.data));\n\n    case DELETE_POST:\n      return _.omit(state, action.payload);\n\n    case FETCH_POST:\n      if (!action.payload.data) {\n        return action.payload.data;\n      }\n\n      var mani = _objectSpread({}, state.results[action.payload.data.pk]);\n\n      mani = action.payload.data;\n      console.log(_objectSpread({}, state, _defineProperty({}, action.payload.data.pk, action.payload.data)));\n      console.log(mani);\n      return _objectSpread({}, state, _defineProperty({}, action.payload.data.pk, action.payload.data));\n\n    case FETCH_POSTS:\n      var over = action.payload;\n\n      if (!over) {\n        return action.payload;\n      }\n\n      over.results = _.mapKeys(over.results, 'pk');\n      console.log(_.merge(over, over));\n      return over;\n\n    case UPDATE:\n      console.log(action.payload.data);\n      var act = action.payload.data;\n      console.log(_objectSpread({}, state, {\n        act: act\n      }));\n      return _objectSpread({}, state, {\n        act: act\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/devcode/Desktop/django-projects/Djang-React/react/frontend/src/reducers/code.js"],"names":["_","FETCH_POSTS","FETCH_POST","DELETE_POST","UPDATE","FETCH_POST_UPDATE","state","action","type","console","log","payload","data","pk","omit","mani","results","over","mapKeys","merge","act"],"mappings":";;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,WAAlC,EAA+CC,MAA/C,EAAuDC,iBAAvD,QAAgF,kBAAhF;AAEA,eAAe,YAA8B;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKH,iBAAL;AACEI,MAAAA,OAAO,CAACC,GAAR,mBAAiBJ,KAAjB,sBAAyBC,MAAM,CAACI,OAAP,CAAeC,IAAf,CAAoBC,EAA7C,EAAkDN,MAAM,CAACI,OAAP,CAAeC,IAAjE;AACA,+BAAYN,KAAZ,sBAAoBC,MAAM,CAACI,OAAP,CAAeC,IAAf,CAAoBC,EAAxC,EAA6CN,MAAM,CAACI,OAAP,CAAeC,IAA5D;;AACF,SAAKT,WAAL;AACE,aAAOH,CAAC,CAACc,IAAF,CAAOR,KAAP,EAAcC,MAAM,CAACI,OAArB,CAAP;;AACF,SAAKT,UAAL;AACE,UAAI,CAACK,MAAM,CAACI,OAAP,CAAeC,IAApB,EAA0B;AACxB,eAAOL,MAAM,CAACI,OAAP,CAAeC,IAAtB;AACD;;AACD,UAAIG,IAAI,qBAAQT,KAAK,CAACU,OAAN,CAAcT,MAAM,CAACI,OAAP,CAAeC,IAAf,CAAoBC,EAAlC,CAAR,CAAR;;AACAE,MAAAA,IAAI,GAAGR,MAAM,CAACI,OAAP,CAAeC,IAAtB;AACAH,MAAAA,OAAO,CAACC,GAAR,mBAAiBJ,KAAjB,sBAAyBC,MAAM,CAACI,OAAP,CAAeC,IAAf,CAAoBC,EAA7C,EAAkDN,MAAM,CAACI,OAAP,CAAeC,IAAjE;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AACA,+BAAYT,KAAZ,sBAAoBC,MAAM,CAACI,OAAP,CAAeC,IAAf,CAAoBC,EAAxC,EAA6CN,MAAM,CAACI,OAAP,CAAeC,IAA5D;;AACF,SAAKX,WAAL;AACE,UAAMgB,IAAI,GAAGV,MAAM,CAACI,OAApB;;AACA,UAAI,CAACM,IAAL,EAAW;AACT,eAAOV,MAAM,CAACI,OAAd;AACD;;AACDM,MAAAA,IAAI,CAACD,OAAL,GAAehB,CAAC,CAACkB,OAAF,CAAUD,IAAI,CAACD,OAAf,EAAwB,IAAxB,CAAf;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYV,CAAC,CAACmB,KAAF,CAAQF,IAAR,EAAcA,IAAd,CAAZ;AACA,aAAOA,IAAP;;AAEF,SAAKb,MAAL;AACEK,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAP,CAAeC,IAA3B;AACA,UAAIQ,GAAG,GAAGb,MAAM,CAACI,OAAP,CAAeC,IAAzB;AACAH,MAAAA,OAAO,CAACC,GAAR,mBAAiBJ,KAAjB;AAAwBc,QAAAA,GAAG,EAAHA;AAAxB;AACA,+BAAYd,KAAZ;AAAmBc,QAAAA,GAAG,EAAHA;AAAnB;;AACF;AACE,aAAOd,KAAP;AA9BJ;AAgCD","sourcesContent":["import _ from 'lodash'\nimport { FETCH_POSTS, FETCH_POST, DELETE_POST, UPDATE, FETCH_POST_UPDATE } from '../actions/notes'\n\nexport default function (state = {}, action) {\n  switch (action.type) {\n    case FETCH_POST_UPDATE:\n      console.log({ ...state, [action.payload.data.pk]: action.payload.data })\n      return { ...state, [action.payload.data.pk]: action.payload.data }\n    case DELETE_POST:\n      return _.omit(state, action.payload)\n    case FETCH_POST:\n      if (!action.payload.data) {\n        return action.payload.data\n      }\n      let mani = { ...state.results[action.payload.data.pk] }\n      mani = action.payload.data\n      console.log({ ...state, [action.payload.data.pk]: action.payload.data })\n      console.log(mani)\n      return { ...state, [action.payload.data.pk]: action.payload.data }\n    case FETCH_POSTS:\n      const over = action.payload\n      if (!over) {\n        return action.payload\n      }\n      over.results = _.mapKeys(over.results, 'pk')\n      console.log(_.merge(over, over))\n      return over\n\n    case UPDATE:\n      console.log(action.payload.data)\n      let act = action.payload.data\n      console.log({ ...state, act })\n      return { ...state, act }\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}