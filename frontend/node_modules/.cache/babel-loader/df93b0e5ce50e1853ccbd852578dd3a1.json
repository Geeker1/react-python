{"ast":null,"code":"import _classCallCheck from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/src/components/SignForm.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, reduxForm } from 'redux-form';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signup } from '../actions/auth';\n\nvar LoginForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginForm, _Component);\n\n  function LoginForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      username: \"\",\n      password: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(this.props);\n    }\n  }, {\n    key: \"renderField\",\n    value: function renderField(field) {\n      var _field$meta = field.meta,\n          touched = _field$meta.touched,\n          error = _field$meta.error;\n      var className = \"form-group \".concat(touched && error ? 'has-danger' : touched && !error ? 'has-none' : ''); // field.meta.error is an automatic property added to field object\n      // from validate function\n\n      return React.createElement(\"div\", {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, field.label), React.createElement(\"input\", Object.assign({\n        className: \"form-control rounded-0\",\n        type: \"\".concat(field.type)\n      }, field.input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, touched ? error : '')));\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(values) {\n      var _this2 = this;\n\n      this.props.createpost(values, function () {\n        _this2.props.history.push('/posts/');\n      });\n      this.props.reset();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // In using redux form the submit function is not really handled\n      // by redux-form so we have to involve redux-form in the submittal\n      //\n      var handleSubmit = this.props.handleSubmit; // dis is pulled from the form helper that is included in content\n\n      console.log(this.props);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Sign up Form\"), React.createElement(\"form\", {\n        className: \"px-2\",\n        onSubmit: handleSubmit(this.onSubmit.bind(this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Username\",\n        name: \"name\",\n        type: \"text\",\n        component: this.renderField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(Field, {\n        label: \"Password\",\n        name: \"password\",\n        type: \"password\",\n        component: this.renderField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary rounded-0 my-3 mx-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(Link, {\n        to: \"/posts\",\n        className: \"btn btn-success rounded-0 mx-2 my-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Cancel\")));\n    }\n  }]);\n\n  return LoginForm;\n}(Component);\n\nfunction validate(values) {\n  // inorder to validate input return a object we create from validate\n  // function....\n  var errors = {}; // Validate the input from 'values'\n\n  if (!values.name) {\n    errors.name = 'Enter a name';\n  }\n\n  if (!values.password) {\n    errors.password = 'Enter a password';\n  } // if (!values.agree || values.agree == false) {\n  //  errors.agree = 'Hello'\n  // }\n  // if errors is empty the form is ready to submit,\n  // else there is a problem and redux form displays errors object\n\n\n  return errors;\n}\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var auth = _ref.auth;\n  return {\n    authx: auth\n  };\n};\n\nexport default reduxForm({\n  validate: validate,\n  // converted to ES6 syntax (validate: validate)\n  form: 'SignUpForm'\n})(connect(mapStateToProps, {\n  signup: signup\n})(SignForm));","map":{"version":3,"sources":["/home/devcode/Desktop/django-projects/Djang-React/react/frontend/src/components/SignForm.js"],"names":["React","Component","PropTypes","Field","reduxForm","Link","connect","signup","LoginForm","state","username","password","console","log","props","field","meta","touched","error","className","label","type","input","values","createpost","history","push","reset","handleSubmit","onSubmit","bind","renderField","validate","errors","name","mapStateToProps","auth","authx","form","SignForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Field, reduxForm } from 'redux-form'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signup } from '../actions/auth'\n\nclass LoginForm extends Component {\n\n  state = {\n    username: \"\",\n    password: \"\"\n  }\n  componentDidMount(){\n    console.log(this.props)\n  }\n\n  renderField (field) {\n    const { meta: { touched, error } } = field\n    const className = `form-group ${touched && error ? 'has-danger'\n      : touched && !error ? 'has-none' : ''}`\n\n    // field.meta.error is an automatic property added to field object\n    // from validate function\n    return (\n      <div className={className}>\n        <label>{field.label}</label>\n        <input\n          className='form-control rounded-0'\n          type={`${field.type}`}\n          {...field.input}\n        />\n        <div className='text-danger'>\n          <small>{touched ? error : ''}</small>\n        </div>\n      </div>\n    )\n  }\n\n  onSubmit (values) {\n    this.props.createpost(values, () => {\n      this.props.history.push('/posts/')\n    })\n    this.props.reset()\n  }\n  render () {\n    // In using redux form the submit function is not really handled\n    // by redux-form so we have to involve redux-form in the submittal\n    //\n\n    const { handleSubmit } = this.props\n    // dis is pulled from the form helper that is included in content\n    console.log(this.props)\n    return (\n      <div>\n        <h2>Sign up Form</h2>\n        <form className='px-2' onSubmit={handleSubmit(this.onSubmit.bind(this))}>\n          <Field\n            label='Username'\n            name='name'\n            type='text'\n            component={this.renderField}\n          />\n          <Field\n            label='Password'\n            name='password'\n            type='password'\n            component={this.renderField}\n          />\n\n          <button type='submit' className='btn btn-primary rounded-0 my-3 mx-2'>Submit</button>\n          <Link to='/posts' className='btn btn-success rounded-0 mx-2 my-3'>Cancel</Link>\n        </form>\n      </div>\n    )\n  }\n}\n\nfunction validate (values) {\n  // inorder to validate input return a object we create from validate\n  // function....\n  const errors = {}\n  // Validate the input from 'values'\n\n  if (!values.name) {\n    errors.name = 'Enter a name'\n  }\n\n  if (!values.password) {\n    errors.password = 'Enter a password'\n  }\n\n  // if (!values.agree || values.agree == false) {\n  //  errors.agree = 'Hello'\n  // }\n\n  // if errors is empty the form is ready to submit,\n  // else there is a problem and redux form displays errors object\n  return errors\n}\n\nconst mapStateToProps = ({auth}) =>{\n  return { authx: auth }\n}\n\nexport default reduxForm({\n  validate, // converted to ES6 syntax (validate: validate)\n  form: 'SignUpForm'\n})(connect(mapStateToProps, { signup })(SignForm))\n"]},"metadata":{},"sourceType":"module"}