{"ast":null,"code":"import _classCallCheck from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/src/components/PostsNew.js\";\nimport React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createpost } from '../actions/notes';\nimport { FaBitcoin, FaPaperPlane, FaHome, FaPython } from 'react-icons/fa';\nimport classNames from 'classnames';\nimport Dropzone from 'react-dropzone';\nvar FILE_FIELD_NAME = 'files';\n\nvar renderDropzoneInput = function renderDropzoneInput(field) {\n  var files = field.input.value;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Dropzone, {\n    name: field.name,\n    onDrop: function onDrop(filesToUpload, e) {\n      return field.input.onChange(filesToUpload);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Try dropping some files here, or click to select files to upload.\")), field.meta.touched && field.meta.error && React.createElement(\"span\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, field.meta.error), files && Array.isArray(files) && React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, files.map(function (file, i) {\n    return React.createElement(\"li\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, file.name);\n  })));\n};\n\nvar PostsNew =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostsNew, _Component);\n\n  function PostsNew() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PostsNew);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PostsNew)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onDrop = function (acceptedFiles, rejectedFiles) {\n      alert('Dropped files!!!');\n    };\n\n    _this.handleChange = function (event) {\n      console.log('changed!!!!');\n    };\n\n    return _this;\n  }\n\n  _createClass(PostsNew, [{\n    key: \"renderField\",\n    value: function renderField(field) {\n      var _field$meta = field.meta,\n          touched = _field$meta.touched,\n          error = _field$meta.error;\n      var className = \"form-group \".concat(touched && error ? 'has-danger' : touched && !error ? 'has-none' : ''); // field.meta.error is an automatic property added to field object\n      // from validate function\n\n      return React.createElement(\"div\", {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, field.label), React.createElement(\"input\", Object.assign({\n        className: \"form-control rounded-0\",\n        type: \"\".concat(field.type)\n      }, field.input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, touched ? error : '')));\n    } // different states of your form\n    // a. pristine( no  input yet)\n    // b. touched()\n    // c. invalid\n    // Dry up your code once you seetwo pieces of JSX looking similar\n    // Dont duplicate logic, you can pass arbitrry properties in the component\n    // and they would be passed to the field props.. it can be any name you choose\n\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(values) {\n      var _this2 = this;\n\n      this.props.createpost(values, function () {\n        _this2.props.history.push('/posts/');\n      });\n      this.props.reset();\n    }\n  }, {\n    key: \"UploadField\",\n    value: function UploadField(field) {\n      console.log(field); // field.meta.error is an automatic property added to field object\n      // from validate function\n\n      return React.createElement(\"div\", {\n        class: \"custom-file\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"input\", Object.assign({\n        type: \"\".concat(field.type)\n      }, field.input, {\n        class: \"custom-file-input\",\n        value: null,\n        id: \"validatedCustomFile\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        class: \"custom-file-label\",\n        for: \"validatedCustomFile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Choose file...\"), React.createElement(\"div\", {\n        class: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Example invalid custom file feedback\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // In using redux form the submit function is not really handled\n      // by redux-form so we have to involve redux-form in the submittal\n      //\n      var handleSubmit = this.props.handleSubmit; // dis is pulled from the form helper that is included in content\n\n      console.log(this.props);\n      return React.createElement(\"div\", {\n        className: \"login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container text-center pt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Hello, create a new post here\"), React.createElement(\"div\", {\n        className: \"row pt-5 justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"col-sm-5 bg-dark text-white text-center rounded col-md-6 p-3\",\n        onSubmit: handleSubmit(this.onSubmit.bind(this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"python\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Python\", React.createElement(\"span\", {\n        className: \"ml-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(FaPython, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }))), React.createElement(Field, {\n        label: \"Name\",\n        name: \"name\",\n        type: \"text\",\n        component: this.renderField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(Field, {\n        label: \"Heading\",\n        name: \"heading\",\n        type: \"text\",\n        component: this.renderField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(Field, {\n        label: \"Description\",\n        name: \"description\",\n        type: \"text\",\n        component: this.renderField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(Dropzone, {\n        onDrop: this.onDrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, function (_ref) {\n        var getRootProps = _ref.getRootProps,\n            getInputProps = _ref.getInputProps,\n            isDragActive = _ref.isDragActive;\n        console.log(getInputProps);\n        return React.createElement(\"div\", Object.assign({}, getRootProps(), {\n          className: classNames('dropzone', {\n            'dropzone--isActive': isDragActive\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        })), isDragActive ? React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, \"Drop files here...\") : React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, \"Try dropping some files here, or click to select files to upload.\"));\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary rounded-0 my-3 mx-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Submit\", React.createElement(\"span\", {\n        className: \"ml-2 float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(FaPaperPlane, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }))), React.createElement(Link, {\n        to: \"/posts\",\n        className: \"btn btn-success rounded-0 mx-2 my-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Cancel\", React.createElement(\"span\", {\n        className: \"ml-2 float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(FaHome, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return PostsNew;\n}(Component); // define a helper function to validate the form and pass it to redux\n// form helper\n// name property must be identical to show up in errors object\n\n\nfunction validate(values) {\n  // inorder to validate input return a object we create from validate\n  // function....\n  var errors = {}; // Validate the input from 'values'\n\n  if (!values.name) {\n    errors.name = 'Enter a name';\n  }\n\n  if (!values.heading) {\n    errors.heading = 'Enter a heading';\n  }\n\n  if (!values.description) {\n    errors.description = 'Enter a Description';\n  } // if (!values.agree || values.agree == false) {\n  //  errors.agree = 'Hello'\n  // }\n  // if errors is empty the form is ready to submit,\n  // else there is a problem and redux form displays errors object\n\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate: validate,\n  // converted to ES6 syntax (validate: validate)\n  form: 'PostsNewForm'\n})(connect(null, {\n  createpost: createpost\n})(PostsNew));","map":{"version":3,"sources":["/home/devcode/Desktop/django-projects/Djang-React/react/frontend/src/components/PostsNew.js"],"names":["React","Component","Field","reduxForm","Link","connect","createpost","FaBitcoin","FaPaperPlane","FaHome","FaPython","classNames","Dropzone","FILE_FIELD_NAME","renderDropzoneInput","field","files","input","value","name","filesToUpload","e","onChange","meta","touched","error","Array","isArray","map","file","i","PostsNew","onDrop","acceptedFiles","rejectedFiles","alert","handleChange","event","console","log","className","label","type","values","props","history","push","reset","handleSubmit","onSubmit","bind","renderField","getRootProps","getInputProps","isDragActive","validate","errors","heading","description","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { createpost } from '../actions/notes'\nimport { FaBitcoin,FaPaperPlane,FaHome, FaPython } from 'react-icons/fa'\nimport classNames from 'classnames'\nimport Dropzone from 'react-dropzone'\n\n\n\n\nconst FILE_FIELD_NAME = 'files'\n\nconst renderDropzoneInput = (field) => {\n  const files = field.input.value;\n  return (\n    <div>\n      <Dropzone\n        name={field.name}\n        onDrop={( filesToUpload, e ) => field.input.onChange(filesToUpload)}\n      >\n        <div>Try dropping some files here, or click to select files to upload.</div>\n      </Dropzone>\n      {field.meta.touched &&\n        field.meta.error &&\n        <span className=\"error\">{field.meta.error}</span>}\n      {files && Array.isArray(files) && (\n        <ul>\n          { files.map((file, i) => <li key={i}>{file.name}</li>) }\n        </ul>\n      )}\n    </div>\n  );\n}\n\n\nclass PostsNew extends Component {\n  renderField (field) {\n    const { meta: { touched, error } } = field\n    const className = `form-group ${touched && error ? 'has-danger'\n      : touched && !error ? 'has-none' : ''}`\n\n    // field.meta.error is an automatic property added to field object\n    // from validate function\n    return (\n      <div className={className}>\n        <label>{field.label}</label>\n        <input\n          className='form-control rounded-0'\n          type={`${field.type}`}\n          {...field.input}\n        />\n        <div className='text-danger'>\n          <small>{touched ? error : ''}</small>\n        </div>\n      </div>\n    )\n  }\n\n\n\n  \n  // different states of your form\n  // a. pristine( no  input yet)\n  // b. touched()\n  // c. invalid\n\n  // Dry up your code once you seetwo pieces of JSX looking similar\n  // Dont duplicate logic, you can pass arbitrry properties in the component\n  // and they would be passed to the field props.. it can be any name you choose\n\n  onSubmit (values) {\n    this.props.createpost(values, () => {\n      this.props.history.push('/posts/')\n    })\n    this.props.reset()\n  }\n\n  onDrop = (acceptedFiles, rejectedFiles) =>{\n    alert('Dropped files!!!')\n  }\n\n  handleChange = (event) =>{\n    console.log('changed!!!!')\n  }\n\n  UploadField(field){\n\n    console.log(field)\n    // field.meta.error is an automatic property added to field object\n    // from validate function\n    return (\n      <div class=\"custom-file\">\n    <input type={`${field.type}`} {...field.input} class=\"custom-file-input\" value={null} id=\"validatedCustomFile\" required/>\n    <label class=\"custom-file-label\" for=\"validatedCustomFile\">Choose file...</label>\n    <div class=\"invalid-feedback\">Example invalid custom file feedback</div>\n  </div>\n    )\n  }\n\n  render () {\n    // In using redux form the submit function is not really handled\n    // by redux-form so we have to involve redux-form in the submittal\n    //\n    const { handleSubmit } = this.props\n    // dis is pulled from the form helper that is included in content\n    console.log(this.props)\n    return (\n      <div className='login'>\n        <div className='container text-center pt-5'>\n          <h2 className='text-white'>Hello, create a new post here</h2>\n          <div className='row pt-5 justify-content-center'>\n            <form className='col-sm-5 bg-dark text-white text-center rounded col-md-6 p-3' onSubmit={handleSubmit(this.onSubmit.bind(this))}>\n            <p className='python'>Python\n          <span className='ml-2'>\n            <FaPython /></span></p>\n              <Field\n                label='Name'\n                name='name'\n                type='text'\n                component={this.renderField}\n              />\n              <Field\n                label='Heading'\n                name='heading'\n                type='text'\n                component={this.renderField}\n              />\n              <Field\n                label='Description'\n                name='description'\n                type='text'\n                component={this.renderField}\n              />\n              <Dropzone onDrop={this.onDrop}>\n        {({getRootProps, getInputProps, isDragActive}) => {\n          console.log(getInputProps)\n          return (\n            <div\n              {...getRootProps()}\n              className={classNames('dropzone', {'dropzone--isActive': isDragActive})}\n            >\n              <input {...getInputProps()} />\n              {\n                isDragActive ?\n                  <p>Drop files here...</p> :\n                  <p>Try dropping some files here, or click to select files to upload.</p>\n              }\n            </div>\n          )\n        }}\n      </Dropzone>\n              \n              <button type='submit' className='btn btn-primary rounded-0 my-3 mx-2'>\n              Submit\n              <span className='ml-2 float-right'>\n              <FaPaperPlane/></span></button>\n              \n              <Link to='/posts' className='btn btn-success rounded-0 mx-2 my-3'>Cancel<span className='ml-2 float-right'>\n              <FaHome/></span></Link>\n            </form>\n          </div></div></div>\n    )\n  }\n}\n\n// define a helper function to validate the form and pass it to redux\n// form helper\n// name property must be identical to show up in errors object\nfunction validate (values) {\n  // inorder to validate input return a object we create from validate\n  // function....\n  const errors = {}\n  // Validate the input from 'values'\n\n  if (!values.name) {\n    errors.name = 'Enter a name'\n  }\n\n  if (!values.heading) {\n    errors.heading = 'Enter a heading'\n  }\n\n  if (!values.description) {\n    errors.description = 'Enter a Description'\n  }\n\n  // if (!values.agree || values.agree == false) {\n  //  errors.agree = 'Hello'\n  // }\n\n  // if errors is empty the form is ready to submit,\n  // else there is a problem and redux form displays errors object\n  return errors\n}\n\nexport default reduxForm({\n  validate, // converted to ES6 syntax (validate: validate)\n  form: 'PostsNewForm'\n})(connect(null, { createpost })(PostsNew))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}