{"ast":null,"code":"import _toConsumableArray from \"/home/devcode/Desktop/django-projects/Djang-React/react/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar initialState = [{\n  text: 'Write code!'\n}, {\n  text: 'Hello'\n}];\nexport default function notes() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_NOTE':\n      return _toConsumableArray(state).concat([{\n        text: action.text\n      }]);\n\n    case 'UPDATE_NOTE':\n      var noteToUpdate = noteList[action.id];\n      noteToUpdate.text;\n      noteList.splice(action.id, 1, noteToUpdate);\n      return noteList;\n\n    case 'DELETE_NOTE':\n      noteList.splice(action.id, 1);\n      return noteList;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/devcode/Desktop/django-projects/Djang-React/react/frontend/src/reducers/notes.js"],"names":["initialState","text","notes","state","action","type","noteToUpdate","noteList","id","splice"],"mappings":";AAAA,IAAMA,YAAY,GAAG,CACnB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CADmB,EAEnB;AAAEA,EAAAA,IAAI,EAAE;AAAR,CAFmB,CAArB;AAKA,eAAe,SAASC,KAAT,GAA8C;AAAA,MAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,MAARI,MAAQ;;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,UAAL;AACC,gCAAWF,KAAX,UAAkB;AAAEF,QAAAA,IAAI,EAAEG,MAAM,CAACH;AAAf,OAAlB;;AAED,SAAK,aAAL;AACC,UAAIK,YAAY,GAAGC,QAAQ,CAACH,MAAM,CAACI,EAAR,CAA3B;AACAF,MAAAA,YAAY,CAACL,IAAb;AACAM,MAAAA,QAAQ,CAACE,MAAT,CAAgBL,MAAM,CAACI,EAAvB,EAA2B,CAA3B,EAA8BF,YAA9B;AACA,aAAOC,QAAP;;AAED,SAAK,aAAL;AACCA,MAAAA,QAAQ,CAACE,MAAT,CAAgBL,MAAM,CAACI,EAAvB,EAA2B,CAA3B;AACA,aAAOD,QAAP;;AAEA;AACE,aAAOJ,KAAP;AAfJ;AAiBD","sourcesContent":["const initialState = [\n  { text: 'Write code!' },\n  { text: 'Hello' }\n]\n\nexport default function notes (state = initialState, action) {\n  switch (action.type) {\n  \tcase 'ADD_NOTE':\n  \t\treturn [...state, { text: action.text }]\n\n  \tcase 'UPDATE_NOTE':\n  \t\tlet noteToUpdate = noteList[action.id]\n  \t\tnoteToUpdate.text\n  \t\tnoteList.splice(action.id, 1, noteToUpdate)\n  \t\treturn noteList\n\n  \tcase 'DELETE_NOTE':\n  \t\tnoteList.splice(action.id, 1)\n  \t\treturn noteList\n\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}